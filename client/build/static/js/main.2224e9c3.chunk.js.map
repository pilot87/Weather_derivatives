{"version":3,"sources":["serviceWorker.ts","components/Navbar.tsx","components/Signature.tsx","features/auth/authSlice.ts","HongKong.webp","San Francisco.webp","NewYork.webp","components/Images.ts","Paris.webp","features/stats/statsSlice.ts","features/derivative/derivativeSlice.ts","features/derivative/useDerivative.ts","features/auth/useAuth.ts","pages/loginPage.tsx","pages/addUser.tsx","pages/aboutUser.tsx","pages/weather.tsx","pages/forecast.tsx","features/weather/weatherSlice.ts","app/store.ts","pages/futures.tsx","features/weather/useWeather.ts","features/stats/useStats.ts","App.tsx","pages/statistic.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","console","log","exec","pathname","Signature","es","name","email","token","JSON","parse","document","cookie","e","stringify","base","initialState","balance","request_params","baseURL","timeout","headers","authSlice","createSlice","reducers","setSession","state","action","payload","rename","updBalance","actions","city_img","hk","friscoimg","nyimg","city","page","Array","length","fill","index","active","statsSlice","update_stat","Object","entries","key","value","page_city_push","push","page_city_change","daily","temp","image","rich","tempRate","quantity","private_derivative","init_page","setCity","setTemp","setRich","setTempRate","setQuantity","setPrivate_derivative","update_rate","rate","rate2","expected_value","standard_deviation","axios","require","default","sleep","ms","Promise","resolve","setTimeout","Phi","Math","round","X","T","abs","Prob","exp","normalcdf","updRate","dispatch","getState","init_city","a","create","auth","post","then","res","data","stats","forEach","di","step","t","i","max","di2","derivative","keys","weather","Number","EPSILON","catch","err","askRate","lvl","upd_Balance","updateBalance","amount","hidden","update_weather","store","configureStore","reducer","authReducer","weatherReducer","derivativeReducer","statsReducer","updWeather","updStats","api_addr","StatisticPage","connect","baseUrl","cities","map","tab_content","detail","index2","s","className","condition","completed","toString","paid","temp_reach","duration","duration_left","show","undefined","assign","re","src","alt","onClick","concat","view","to","NavbarFrame","user","id","AboutPage","useState","username","msg","password","form","setForm","message","color","setMsg","msg2","setMsg2","changeHandler","event","target","focusHandler","blurHandler","response","type","onChange","onFocus","onBlur","htmlFor","AddUserPage","errors","handleRegister","parseErrors","record","find","param","ForecastPage","useParams","hourly","hourly_temp","tmp","hourly_wind_speed","hourly_clouds","hourly_pressure","hourly_humidity","hourly_visibility","WeatherPage","current_temp","current_wind_speed","current_clouds","current_pressure","current_humidity","current_visibility","LoginPage","FuturesPage","weather0","derivative0","changeCity","changeTemp","test","parseFloat","changeRich","changeQuantity","changePrivate_derivative","request","rates","d","handleBuy","card","select","checked","loadingState","initializeData","picture","Image","useEffect","basename","useSelector","exact","path","component","history","createBrowserHistory","process","ReactDOM","render","StrictMode","Helmet","href","rel","content","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.2224e9c3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    console.log('NODE_ENV')\r\n    // @ts-ignore\r\n    base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n}\r\n\r\nexport const Navbar = ({auth}: any): any => {\r\n    const user = auth.name\r\n    if (user === '') return (\r\n        <nav>\r\n            <div className='nav-wrapper'>\r\n                <NavLink to='/' className='brand-logo'>Forecast trading emulator</NavLink>\r\n                <ul id='nav-mobile' className='right hide-on-med-and-down'>\r\n                    <li><NavLink to='/weather'>Weather</NavLink></li>\r\n                    <li><NavLink to='/statistic'>Statistic</NavLink></li>\r\n                    <li><NavLink to='/'>Futures</NavLink></li>\r\n                    <li><NavLink to='/login'>Hello, guest!</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n    return (\r\n        <nav>\r\n            <div className='nav-wrapper'>\r\n                <NavLink to='/' className='brand-logo'>Forecast trading emulator</NavLink>\r\n                <ul id='nav-mobile' className='right hide-on-med-and-down'>\r\n                    <li><NavLink to='/weather'>Weather</NavLink></li>\r\n                    <li><NavLink to='/statistic'>Statistic</NavLink></li>\r\n                    <li><NavLink to='/'>Futures</NavLink></li>\r\n                    <li><NavLink to='/about'>Hello, {user}!</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\rexport const Signature = () => {\r    return (\r        <div className=\"grey-text text-darken-3 signature\">\r            <p className=\"simple\">Code placed at <a href=\"https://github.com/pilot87/Weather_derivatives\">GitHub</a></p>\r            <p className=\"simple\">Alexey Kostylev aka Kernel Explorer</p>\r            <p className=\"simple\">My Upwork profile: <a href=\"https://www.upwork.com/fl/kernelexplorer\">Kernel\r                Explorer</a></p>\r        </div>\r    )\r}\r","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\n\r\nexport interface Session {\r\n    name: string\r\n    email: string\r\n    request_params: any\r\n    balance: number\r\n    base: string\r\n}\r\n\r\nexport interface User {\r\n    name: string\r\n    email: string\r\n    token: string\r\n}\r\n\r\nlet es: User = { name: '', email: '', token: '' }\r\n\r\ntry {\r\n    es = JSON.parse(document.cookie)\r\n}\r\ncatch (e) {\r\n    document.cookie = JSON.stringify(es)\r\n}\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    // @ts-ignore\r\n    base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n}\r\n\r\nconst initialState: Session = {\r\n    name: es.name,\r\n    email: es.email,\r\n    balance: 0,\r\n    base: base,\r\n    request_params: {\r\n        // @ts-ignore\r\n        baseURL: base + '/api',\r\n        timeout: 30000,\r\n        headers: { 'Content-Type': 'application/json', 'Authorization': es.token }\r\n    }\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setSession(state, action: PayloadAction<User>) {\r\n            const { name, email, token } = action.payload\r\n            const es = { name: name, email: email, token: 'Bearer ' + token }\r\n            document.cookie = JSON.stringify(es)\r\n            state.name = name\r\n            state.email = email\r\n            state.request_params = {\r\n                baseURL: \"/wf/api\",\r\n                timeout: 30000,\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': es.token }\r\n            }\r\n        },\r\n        rename(state, action: PayloadAction<string>) {\r\n            const es = JSON.parse(document.cookie)\r\n            es.name = action.payload\r\n            document.cookie = JSON.stringify(es)\r\n            state.name = action.payload\r\n        },\r\n        updBalance(state, action: PayloadAction<{ balance: number }>) {\r\n            const {balance} = action.payload\r\n            state.balance = balance\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setSession, rename, updBalance } = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","export default __webpack_public_path__ + \"static/media/HongKong.c306e26e.webp\";","export default __webpack_public_path__ + \"static/media/San Francisco.acb10179.webp\";","export default __webpack_public_path__ + \"static/media/NewYork.1581e0a7.webp\";","import hk from '../HongKong.webp'\r\nimport friscoimg from '../San Francisco.webp'\r\nimport nyimg from '../NewYork.webp'\r\nimport parisimg from '../Paris.webp'\r\n\r\nexport const city_img = [hk, friscoimg, parisimg, nyimg]\r\n","export default __webpack_public_path__ + \"static/media/Paris.4922d841.webp\";","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nimport {city_img} from '../../components/Images'\r\n\r\nexport interface StatDetail {\r\n    paid: string\r\n    completed: boolean\r\n    quantity: 1\r\n    email: string // contain username, not email\r\n    duration: number\r\n    duration_left: number\r\n    city: string\r\n    type: string\r\n    hidden: boolean\r\n    temp: number\r\n    temp_reach: boolean\r\n    _id: any\r\n    __v: number\r\n}\r\n\r\nexport interface CurrentStat {\r\n    [index: string]: StatDetail[]\r\n}\r\n\r\nexport interface PageStat {\r\n    index: number\r\n    active: string[]\r\n}\r\n\r\nexport interface Stat {\r\n    city: CurrentStat\r\n    page: PageStat[]\r\n}\r\n\r\nconst initialState: Stat = {\r\n    city: {},\r\n    page: (new Array(city_img.length)).fill({index: 0, active: ['green lighten-4', '', '']})\r\n}\r\n\r\nexport const statsSlice = createSlice({\r\n    name: 'stats',\r\n    initialState,\r\n    reducers: {\r\n        update_stat(state: Stat, action: PayloadAction<CurrentStat>) {\r\n            for (const [key, value] of Object.entries(action.payload)) {\r\n                state.city[key] = value\r\n            }\r\n        },\r\n        page_city_push(state: Stat, action: PayloadAction<PageStat>) {\r\n            state.page.push(action.payload)\r\n        },\r\n        page_city_change(state: Stat, action: PayloadAction<{index: number, payload: PageStat}>) {\r\n            state.page[action.payload.index] = action.payload.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { update_stat, page_city_push, page_city_change } = statsSlice.actions\r\n\r\nexport default statsSlice.reducer\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nexport interface DailyRate {\r\n    [index: string]: {\r\n        temp: number[],\r\n        rate: number[],\r\n        rate2: number[],\r\n        expected_value: number,\r\n        standard_deviation: number\r\n    }\r\n}\r\n\r\ninterface Page {\r\n    city: string\r\n    temp: {\r\n        temp: string\r\n        image: string\r\n    }\r\n    rich: boolean\r\n    tempRate: string\r\n    quantity: string\r\n    private_derivative: boolean\r\n}\r\n\r\nexport interface Derivative {\r\n    daily: DailyRate\r\n    page: Page\r\n}\r\n\r\nconst initialState: Derivative = {\r\n    daily: {},\r\n    page: {\r\n        city: '',\r\n        temp: {\r\n            temp: '0',\r\n            image: 'wb_sunny'\r\n        },\r\n        rich: true,\r\n        tempRate: '0 USD',\r\n        quantity: '1',\r\n        private_derivative: true\r\n    }\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'derivative',\r\n    initialState,\r\n    reducers: {\r\n        init_page(state: Derivative, action: PayloadAction<Page>) {\r\n            state.page = action.payload\r\n        },\r\n        setCity(state: Derivative, action: PayloadAction<string>) {\r\n            state.page.city = action.payload\r\n        },\r\n        setTemp(state: Derivative, action: PayloadAction<{temp: string, image: string}>) {\r\n            state.page.temp = action.payload\r\n        },\r\n        setRich(state: Derivative, action: PayloadAction<boolean>) {\r\n            state.page.rich = action.payload\r\n        },\r\n        setTempRate(state: Derivative, action: PayloadAction<string>) {\r\n            state.page.tempRate = action.payload\r\n        },\r\n        setQuantity(state: Derivative, action: PayloadAction<string>) {\r\n            state.page.quantity = action.payload\r\n        },\r\n        setPrivate_derivative(state: Derivative, action: PayloadAction<boolean>) {\r\n            state.page.private_derivative = action.payload\r\n        },\r\n        update_rate(state: Derivative, action: PayloadAction<{\r\n            city: string,\r\n            rate: number[],\r\n            rate2: number[],\r\n            temp: number[],\r\n            expected_value: number,\r\n            standard_deviation: number\r\n        }>) {\r\n            if(!(action.payload.city in state.daily)) {\r\n                state.daily[action.payload.city] = {temp: [], rate: [], rate2: [],\r\n                expected_value: 0, standard_deviation: 0}\r\n            }\r\n\r\n            state.daily[action.payload.city] = {\r\n                temp: action.payload.temp,\r\n                rate: action.payload.rate,\r\n                rate2: action.payload.rate2,\r\n                standard_deviation: action.payload.standard_deviation,\r\n                expected_value: action.payload.expected_value\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    update_rate,\r\n    init_page,\r\n    setCity,\r\n    setTemp,\r\n    setRich,\r\n    setTempRate,\r\n    setQuantity,\r\n    setPrivate_derivative\r\n} = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","import {update_rate, init_page, setCity, setTemp, setTempRate, setRich,\r\n    setQuantity, setPrivate_derivative} from './derivativeSlice'\r\n\r\nconst axios = require('axios').default\r\n\r\nconst sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst normalcdf = (X: number) => {\r\n    const T = 1 / (1 + 0.2316419 * Math.abs(X))\r\n    const D = 0.3989423 * Math.exp(-X * X / 2)\r\n    let Prob = D * T * (0.3193815 + T * (-0.3565638 + T * (1.781478 + T * (-1.821256 + T * 1.330274))))\r\n    if (X > 0) {\r\n        Prob = 1 - Prob\r\n    }\r\n    return Prob\r\n}\r\n\r\nconst rate =  (standard_deviation: number,\r\n               expected_value: number,\r\n               temp: number,\r\n               rich: boolean) => {\r\n\r\n    let Phi: number\r\n\r\n    if(standard_deviation === 0) {\r\n        if (temp < expected_value) {\r\n            Phi = 0\r\n        } else {\r\n            Phi = 1\r\n        }\r\n    } else {\r\n        Phi = Math.round(100000 * normalcdf((temp - expected_value) /\r\n            standard_deviation)) / 100000\r\n        if(rich) {\r\n            Phi = 1 - Phi\r\n        }\r\n    }\r\n\r\n    return 1.05 * Phi\r\n}\r\n\r\nexport const updRate = async (dispatch: any, getState: any, init_city?: string) => {\r\n    console.log('upd')\r\n    return axios.create(getState().auth.request_params).post('/derivative/daily_params')\r\n        .then((res: any) => {\r\n            res.data.stats.forEach((city: any) => {\r\n                let temp: number[]\r\n                let di: number[]\r\n                let step = 2\r\n                const l = 2\r\n\r\n                do {\r\n                    temp = []\r\n                    di = []\r\n\r\n                    for (let t = 0; t < 2 * l + 1; t++) {\r\n                        temp.push(city.expected_value - (l - t) * step)\r\n                    }\r\n\r\n                    for (const t of temp) {\r\n                        const i = rate(\r\n                            city.standard_deviation,\r\n                            city.expected_value,\r\n                            t,\r\n                            true)\r\n                        di.push(i)\r\n                    }\r\n\r\n                    step = step / 2\r\n                } while (Math.max(...di) > 1)\r\n\r\n                let di2 = []\r\n\r\n                for (const i of di) {\r\n                    di2.push(1 - i)\r\n                }\r\n\r\n                dispatch(update_rate({\r\n                    city: city.name,\r\n                    rate: di,\r\n                    rate2: di2,\r\n                    temp: temp,\r\n                    expected_value: city.expected_value,\r\n                    standard_deviation: city.standard_deviation\r\n                }))\r\n            })\r\n            if (getState().derivative.page.city === '') {\r\n                const init_city = Object.keys(getState().weather.weather)[0]\r\n                console.log(init_city)\r\n                dispatch(init_page({\r\n                    city: init_city,\r\n                    temp: {\r\n                        temp: '0',\r\n                        image: 'wb_sunny'\r\n                    },\r\n                    quantity: '1',\r\n                    tempRate: Math.round((rate(\r\n                        getState().derivative.daily[init_city].standard_deviation,\r\n                        getState().derivative.daily[init_city].expected_value,\r\n                        0,\r\n                        true\r\n                    ) + Number.EPSILON) * 10000) / 100 + ' %',\r\n                    private_derivative: true,\r\n                    rich: true\r\n                }))\r\n            }\r\n        })\r\n        .catch((err: any) => console.log(err))\r\n}\r\n\r\nexport const regularUpdateRate = () => async (dispatch: any, getState: any) => {\r\n    while(true) {\r\n        await sleep(10000)\r\n        await updRate(dispatch, getState)\r\n    }\r\n}\r\n\r\nconst askRate = (dispatch: any, getState: any) => {\r\n    const city = getState().derivative.page.city\r\n    const lvl = rate(getState().derivative.daily[city].standard_deviation,\r\n        getState().derivative.daily[city].expected_value,\r\n        getState().derivative.page.temp.temp,\r\n        getState().derivative.page.rich)\r\n    console.log(lvl)\r\n    dispatch(setTempRate(Math.round((lvl + Number.EPSILON) * 10000) / 100 + ' %'))\r\n}\r\n\r\nexport const changeCity = (city: string) => async (dispatch: any, getState: any) => {\r\n    dispatch(setCity(city))\r\n    askRate(dispatch, getState)\r\n}\r\n\r\nexport const changeTemp = (event: any) => async (dispatch: any, getState: any) => {\r\n\r\n    if (/^(-?[0-9]*\\.?[0-9]*)$/.test(event.target.value)) {\r\n        if (Number.parseFloat(event.target.value).toString() === 'NaN') {\r\n            if (event.target.value === '-') {\r\n                dispatch(setTemp({temp: '-0', image: 'ac_unit'}))\r\n                askRate(dispatch, getState)\r\n            } else if (event.target.value === '.') {\r\n                dispatch(setTemp({temp: '0.', image: 'wb_sunny'}))\r\n                askRate(dispatch, getState)\r\n            } else if (event.target.value === '') {\r\n                dispatch(setTemp({temp: '0', image: 'wb_sunny'}))\r\n                askRate(dispatch, getState)\r\n            } else {\r\n                dispatch(setTemp({temp: event.target.value, image: 'border_color'}))\r\n                askRate(dispatch, getState)\r\n            }\r\n        } else {\r\n            console.log(event.target.value)\r\n            if (Number.parseFloat(event.target.value) < 0) {\r\n                dispatch(setTemp({temp: event.target.value, image: 'ac_unit'}))\r\n                askRate(dispatch, getState)\r\n            } else {\r\n                dispatch(setTemp({temp: event.target.value, image: 'wb_sunny'}))\r\n                askRate(dispatch, getState)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeRich = () => async (dispatch: any, getState: any) => {\r\n    dispatch(setRich(!getState().derivative.page.rich))\r\n    askRate(dispatch, getState)\r\n}\r\n\r\nexport const changeQuantity = (event: any) => async (dispatch: any, getState: any) => {\r\n    if (/^[1-9][0-9]*$/.test(event.target.value)) {\r\n        dispatch(setQuantity(event.target.value))\r\n    }\r\n    askRate(dispatch, getState)\r\n}\r\n\r\nexport const changePrivate_derivative = () => async (dispatch: any, getState: any) => {\r\n    dispatch(setPrivate_derivative(!getState().derivative.page.private_derivative))\r\n    askRate(dispatch, getState)\r\n}\r\n","import {updBalance} from './authSlice'\r\n\r\nconst axios = require('axios').default\r\n\r\nconst sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const upd_Balance = async (dispatch: any, getState: any) => {\r\n    if(getState().auth.name !== '') {\r\n        return axios.create(getState().auth.request_params).post('/profile/balance')\r\n            .then((res: any) => {\r\n                dispatch(updBalance(res.data))\r\n            })\r\n    } else {\r\n        return -1\r\n    }\r\n}\r\n\r\nexport const regularUpdateBalance = () => async (dispatch: any, getState: any) => {\r\n    while(true) {\r\n        await sleep(10000)\r\n        upd_Balance(dispatch, getState)\r\n    }\r\n}\r\n\r\nexport const updateBalance = () => async (dispatch: any, getState: any) => {\r\n    return upd_Balance(dispatch, getState)\r\n}\r\n","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst axios = require('axios').default\r\n\r\nexport const Login = ({auth, setSession, baseUrl}: any): any => {\r\n\r\n    console.log(auth)\r\n\r\n    const [form, setForm] = useState({\r\n        email: {msg: '', state: ''}, password: {msg: '', state: ''}\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        message: '', color: 'gray'\r\n    })\r\n\r\n    const changeHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ' active'}})\r\n    }\r\n\r\n    const focusHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ' active'}})\r\n    }\r\n\r\n    const blurHandler = (event: any) => {\r\n        if (event.target.value === '') {\r\n            setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ''}})\r\n        }\r\n    }\r\n\r\n    const a = axios.create(auth.request_params)\r\n\r\n    const handleLogin = () => {\r\n        a.post('/auth/login', {email: form.email.msg, password: form.password.msg})\r\n            .then((res: any) => {\r\n                setSession({email: res.data.email, name: res.data.username,\r\n                    token: res.data.token})\r\n                setMsg({message: 'Welcome, ' + res.data.username + '!', color: 'green'})\r\n                window.location.assign('about')\r\n            })\r\n            .catch((err: any) => setMsg(\r\n                {message: (err.response.data) ? err.response.data.message : err.data.message, color: 'red'}\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <NavLink to=\"/\" className=\"breadcrumb\">Home</NavLink>\r\n                        <NavLink to=\"/login\" className=\"breadcrumb\">Login</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        <div className='row login_cont'>\r\n            <form className='col s12'>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>email</i>\r\n                        <input\r\n                            id='email'\r\n                            name='email'\r\n                            type='text'\r\n                            value={form.email.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='email' className={'email' + form.email.state}>Email</label>\r\n                    </div>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>more_horiz</i>\r\n                        <input\r\n                            id='password'\r\n                            name='password'\r\n                            type='password'\r\n                            value={form.password.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='password' className={'password' + form.password.state}>Password</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn login_btn green lighten-2 black-text'\r\n                    onClick={handleLogin}\r\n                >\r\n                    Login\r\n                </button>\r\n                <NavLink\r\n                    className='btn register_btn grey lighten-1 black-text'\r\n                    to='/register'\r\n                >\r\n                    Register new User\r\n                </NavLink>\r\n            </div>\r\n            <div className={'alert login_alert ' + msg.color + '-text text-lighten-1'}>\r\n                {msg.message}\r\n            </div>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst axios = require('axios').default\r\n\r\nexport const AddUser = ({auth, baseUrl}: any): any => {\r\n\r\n    const [form, setForm] = useState({\r\n        email: {msg: '', state: 'adduser_label'}, password: {msg: '', state: 'adduser_label'},\r\n        username: {msg: '', state: 'adduser_label'}\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        message: '', color: 'gray', errors: {'email': '', 'password': '', 'username': ''}\r\n    })\r\n\r\n    const changeHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: 'adduser_label active'}})\r\n    }\r\n\r\n    const focusHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: 'adduser_label active'}})\r\n    }\r\n\r\n    const blurHandler = (event: any) => {\r\n        if (event.target.value === '') {\r\n            setForm({ ...form, [event.target.name]: {msg: event.target.value, state: 'adduser_label'}})\r\n        }\r\n    }\r\n\r\n    const a = axios.create(auth.request_params)\r\n\r\n    const handleRegister = async() => {\r\n        const parseErrors = (err: any) => {\r\n            const record = {'email': '', 'password': '', 'username': ''}\r\n            const email = err.find((e: any) => e.param === 'email')\r\n            if (email) record.email = email.msg\r\n            const username = err.find((e: any) => e.param === 'username')\r\n            if (username) record.username = username.msg\r\n            const password = err.find((e: any) => e.param === 'password')\r\n            if (password) record.password = password.msg\r\n            return record\r\n        }\r\n        a.post('/auth/register', {email: form.email.msg, username: form.username.msg,\r\n            password: form.password.msg})\r\n            .then((res: any) => {\r\n                setMsg(\r\n                    {message: res.data.message, color: 'green',\r\n                        errors: {'email': '', 'password': '', 'username': ''}}\r\n                )\r\n                window.location.assign('login')\r\n            })\r\n            .catch((err: any) => setMsg(\r\n                {message: (err.response.data != null) ? err.response.data.message : err.data.message, color: 'red',\r\n                    errors: (!!err.response && !!err.response.data.errors) ? parseErrors(err.response.data.errors) :\r\n                        {'email': '', 'password': '', 'username': ''}}\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <NavLink to=\"/\" className=\"breadcrumb\">Home</NavLink>\r\n                        <NavLink to=\"/register\" className=\"breadcrumb\">Register</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <form action='../.html' className='col autocomplete-content s12'>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>email</i>\r\n                        <input\r\n                            id='email'\r\n                            name='email'\r\n                            type='text'\r\n                            value={form.email.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='email' className={form.email.state}>Email</label>\r\n                    </div>\r\n                    <div className='row adduser_error'>\r\n                        {msg.errors.email}\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>border_color</i>\r\n                        <input\r\n                            id='username'\r\n                            name='username'\r\n                            type='text'\r\n                            value={form.username.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='username' className={form.username.state}>User name</label>\r\n                    </div>\r\n                    <div className='row adduser_error'>\r\n                        {msg.errors.username}\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>more_horiz</i>\r\n                        <input\r\n                            id='password'\r\n                            name='password'\r\n                            type='password'\r\n                            value={form.password.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='password' className={form.password.state}>Password</label>\r\n                    </div>\r\n                    <div className='row adduser_error'>\r\n                        {msg.errors.password}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn adduser_btn green lighten-2 black-text'\r\n                    onClick={handleRegister}\r\n                >\r\n                    Register new User\r\n                </button>\r\n            </div>\r\n            <br/>\r\n            <div className={'alert adduser_alert ' + msg.color + '-text text-lighten-1'}>\r\n                {msg.message}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst axios = require('axios').default\r\n\r\nexport const About = ({auth, rename, setSession, baseUrl, updateBalance}: any): any => {\r\n\r\n    const [form, setForm] = useState(\r\n        {username: {msg: '', state: ''}, password: {msg: '', state: ''}\r\n        })\r\n\r\n    const [msg, setMsg] = useState({\r\n        message: '', color: 'gray'\r\n    })\r\n\r\n    const [msg2, setMsg2] = useState({\r\n        message: '', color: 'gray'\r\n    })\r\n\r\n    const changeHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ' active'}})\r\n    }\r\n\r\n    const focusHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ' active'}})\r\n    }\r\n\r\n    const blurHandler = (event: any) => {\r\n        if (event.target.value === '') {\r\n            setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ''}})\r\n        }\r\n    }\r\n\r\n    const a = axios.create(auth.request_params)\r\n\r\n    const handleResatBalance = () => {\r\n        a.post('/profile/reset_balance', { username: form.username.msg })\r\n            .then((res: any) => {\r\n                updateBalance()\r\n            })\r\n            .catch((err: any) => setMsg(\r\n                {message: err.response.data.message, color: 'red'}\r\n            ))\r\n    }\r\n\r\n    const handleRename = () => {\r\n        a.post('/profile/rename', { username: form.username.msg })\r\n            .then((res: any) => {\r\n                rename(res.data.username)\r\n                setMsg({message: 'Welcome, ' + res.data.username + '!', color: 'green'})\r\n            })\r\n            .catch((err: any) => setMsg(\r\n                {message: err.response.data.message, color: 'red'}\r\n            ))\r\n    }\r\n\r\n    const handlePassword = () => {\r\n        a.post('/profile/chpasswd', { password: form.password.msg })\r\n            .then((res: any) => {\r\n                setMsg2({message: 'Password has changed', color: 'green'})\r\n            })\r\n            .catch((err: any) => setMsg2(\r\n                {message: err.response.data.message, color: 'red'}\r\n            ))\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        setSession({ email: '', name: '', token: '' })\r\n        window.location.assign('login')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <NavLink to=\"/\" className=\"breadcrumb\">Home</NavLink>\r\n                        <NavLink to=\"/about\" className=\"breadcrumb\">About</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        <div className='row about_container'>\r\n            <div className='row'>\r\n                <div className='collection about_internal_container'>\r\n                    <p className='collection-item black-text'>\r\n                        {'Email:    ' + auth.email}</p>\r\n                    <p className='collection-item black-text'>\r\n                        {'Username: ' + auth.name}</p>\r\n                    <p className='collection-item black-text'>\r\n                        {'Balance:    ' + auth.balance}</p>\r\n                </div>\r\n            </div>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn about_btn green lighten-2 black-text'\r\n                    onClick={handleResatBalance}\r\n                >\r\n                    Reset balance to 100 000 USD\r\n                </button>\r\n            </div>\r\n            <form className='col s12'>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>border_color</i>\r\n                        <input\r\n                            id='username'\r\n                            name='username'\r\n                            type='text'\r\n                            value={form.username.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='username' className={'username' + form.username.state} >New username</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn about_btn green lighten-2 black-text'\r\n                    onClick={handleRename}\r\n                >\r\n                    Change username\r\n                </button>\r\n            </div>\r\n            <div className={'alert ' + msg.color + '-text text-lighten-1'}>\r\n                {msg.message}\r\n            </div>\r\n            <form className='col s12'>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>more_horiz</i>\r\n                        <input\r\n                            id='password'\r\n                            name='password'\r\n                            type='password'\r\n                            value={form.password.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='password' className={'password' + form.password.state}>New password</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn about_btn green lighten-2 black-text'\r\n                    onClick={handlePassword}\r\n                >\r\n                    Change password\r\n                </button>\r\n            </div>\r\n            <div className={'alert ' + msg2.color + '-text text-lighten-1'}>\r\n                {msg2.message}\r\n            </div>\r\n\r\n            <div className='card-action about_card_btn'>\r\n                <button\r\n                    className='btn about_btn green lighten-2 black-text'\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {Weather, WeatherAll} from '../features/weather/weatherSlice'\r\nimport {city_img} from '../components/Images'\r\n\r\ninterface Args {\r\n    weather: WeatherAll\r\n    baseUrl: string\r\n}\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    console.log('NODE_ENV')\r\n    // @ts-ignore\r\n    base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n}\r\n\r\nexport const WeatherP = ({weather, baseUrl}: Args): any => {\r\n    let cities: any =  Object.entries(weather.weather).map((city: [string, Weather], index: number) =>\r\n        <td>\r\n            <NavLink to={'/forecast/' + city[0]}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-image\">\r\n                        <img src={city_img[index]} alt={city[0]} className='weather_img'/>\r\n                        <span className=\"card-title\">{city[0]}</span>\r\n                    </div>\r\n                    <div className=\"card-content black-text\">\r\n                        <table>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>Temperature</td>\r\n                                <td className='weather_table_right'>\r\n                                    {Math.round((city[1].current_temp + Number.EPSILON) * 100) / 100 + ' °С'}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Wind speed</td>\r\n                                <td className='weather_table_right'>{city[1].current_wind_speed + ' meter/sec'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Cloudiness</td>\r\n                                <td className='weather_table_right'>{city[1].current_clouds + ' %'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Pressure</td>\r\n                                <td className='weather_table_right'>{city[1].current_pressure + ' hPa'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Humidity</td>\r\n                                <td className='weather_table_right'>{city[1].current_humidity + ' %'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Visibility</td>\r\n                                <td className='weather_table_right'>{city[1].current_visibility + ' metres'}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </td>\r\n    )\r\n    if(cities === []) {\r\n        cities = <div className=\"progress\">\r\n            <div className=\"indeterminate\"/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <NavLink to=\"/\" className=\"breadcrumb\">Home</NavLink>\r\n                        <NavLink to=\"/weather\" className=\"breadcrumb\">Weather</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <table>\r\n                <tr>\r\n                    {cities}\r\n                </tr>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    console.log('NODE_ENV')\r\n    // @ts-ignore\r\n    base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n}\r\n\r\nexport const Forecast = ({weather, baseUrl}: any): any => {\r\n\r\n    const city = useParams<{city: string}>().city\r\n\r\n    let hourly = <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n    </div>\r\n\r\n    if (weather.weather[city] !== undefined) {\r\n        hourly = weather.weather[city].hourly_temp.map((tmp: number, index: number) => {\r\n            return (\r\n                <tr>\r\n                    <td>{index * 3}</td>\r\n                    <td>{weather.weather[city].hourly_temp[index]}</td>\r\n                    <td>{weather.weather[city].hourly_wind_speed[index]}</td>\r\n                    <td>{weather.weather[city].hourly_clouds[index]}</td>\r\n                    <td>{weather.weather[city].hourly_pressure[index]}</td>\r\n                    <td>{weather.weather[city].hourly_humidity[index]}</td>\r\n                    <td>{weather.weather[city].hourly_visibility[index]}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <NavLink to=\"/\" className=\"breadcrumb\">Home</NavLink>\r\n                        <NavLink to=\"/weather\" className=\"breadcrumb\">Weather</NavLink>\r\n                        <NavLink to={\"/weather/\" + city} className=\"breadcrumb\">{'Forecast for ' + city}</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Hours</th>\r\n                    <th>Temperature</th>\r\n                    <th>Wind speed</th>\r\n                    <th>Cloudiness</th>\r\n                    <th>Pressure</th>\r\n                    <th>Humidity</th>\r\n                    <th>Visibility</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {hourly}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n}\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nexport interface Weather {\r\n    current_temp: number\r\n    hourly_temp: number[]\r\n    current_wind_speed: number\r\n    hourly_wind_speed: number[]\r\n    current_clouds: number\r\n    hourly_clouds: number[]\r\n    current_pressure: number\r\n    hourly_pressure: number[]\r\n    current_humidity: number\r\n    hourly_humidity: number[]\r\n    current_visibility: number\r\n    hourly_visibility: number[]\r\n}\r\n\r\nexport interface WeatherMap {\r\n    [index: string]: Weather\r\n}\r\n\r\nexport interface Page {\r\n    temp: {\r\n        temp: string\r\n        image: string\r\n    }\r\n    city: string\r\n    quantity: string\r\n    rate: string\r\n    amount: string\r\n    rich: boolean\r\n    hidden: boolean\r\n}\r\n\r\nexport interface WeatherAll {\r\n    weather: WeatherMap\r\n    page: Page\r\n}\r\n\r\nconst initialState: WeatherAll = {\r\n    weather: {},\r\n    page: {\r\n        temp: {\r\n            temp: '0',\r\n            image: 'wb_sunny'\r\n        },\r\n        quantity: '1',\r\n        rich: true,\r\n        city: 'Moscow',\r\n        rate: '0 %',\r\n        amount: '0 USD',\r\n        hidden: true\r\n    }\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'weather',\r\n    initialState,\r\n    reducers: {\r\n        update_weather(state: WeatherAll, action: PayloadAction<WeatherMap>) {\r\n            state.weather = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { update_weather } = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","import {configureStore, ThunkAction, Action} from '@reduxjs/toolkit'\r\n\r\nimport authReducer from '../features/auth/authSlice'\r\nimport weatherReducer from '../features/weather/weatherSlice'\r\nimport derivativeReducer from '../features/derivative/derivativeSlice'\r\nimport statsReducer from '../features/stats/statsSlice'\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    weather: weatherReducer,\r\n    derivative: derivativeReducer,\r\n    stats: statsReducer\r\n  }\r\n})\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {Weather, WeatherAll} from '../features/weather/weatherSlice'\r\nimport {Derivative} from '../features/derivative/derivativeSlice'\r\nimport {Session} from '../features/auth/authSlice'\r\nimport {city_img} from '../components/Images'\r\nimport {store} from '../app/store'\r\nimport {updateBalance} from '../features/auth/useAuth'\r\n\r\nconst axios = require('axios').default\r\n\r\ninterface Args {\r\n    auth: Session\r\n    weather0: WeatherAll\r\n    derivative0: Derivative\r\n    changeCity: (city: string) => void\r\n    changeTemp: (event: any) => void\r\n    changeRich: () => void\r\n    changeQuantity: (event: any) => void\r\n    changePrivate_derivative: () => void\r\n    baseUrl: string\r\n}\r\n\r\nexport const Futures = ({\r\n                            auth,\r\n                            weather0,\r\n                            derivative0,\r\n                            changeCity,\r\n                            changeTemp,\r\n                            changeRich,\r\n                            changeQuantity,\r\n                            changePrivate_derivative\r\n}: Args): any => {\r\n\r\n    const city = derivative0.page.city\r\n    const temp = derivative0.page.temp\r\n    const rich = derivative0.page.rich\r\n\r\n    const request = axios.create(auth.request_params)\r\n    const derivative = derivative0.daily[city]\r\n\r\n\r\n    const tempRate = derivative0.page.tempRate\r\n\r\n    const private_derivative = derivative0.page.private_derivative\r\n    const quantity = derivative0.page.quantity\r\n\r\n    let cities: any = <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n    </div>\r\n\r\n    if(weather0.weather !== undefined) {\r\n        cities = Object.entries(weather0.weather).map((city: [string, Weather], index: number) => {\r\n            return (\r\n                <td onClick={() => {\r\n                    changeCity(city[0])\r\n                }}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <img className='futures_img'\r\n                                src={city_img[index]} alt={city[0]}/>\r\n                            <span className=\"card-title\">{city[0]}</span>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            )\r\n        })\r\n    }\r\n\r\n    let rates: any = <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n    </div>\r\n\r\n    if (derivative !== undefined) {\r\n        rates = derivative.temp.map((d: number, i: number) =>\r\n            <tr>\r\n                <td>{Math.round((d + Number.EPSILON) * 100) / 100 + ' °C'}</td>\r\n                <td className='text_center'>{Math.round((derivative.rate[i] + Number.EPSILON) * 1000) / 10 + ' %' }</td>\r\n                <td className='text_right'>{Math.round((derivative.rate2[i] + Number.EPSILON) * 1000) / 10 + ' %' }</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const balance = auth.balance\r\n\r\n    const handleBuy = () => {\r\n        request.post('/derivative/buy', {\r\n            city: city,\r\n            duration: 60 * 24,\r\n            temp: Number.parseFloat(temp.temp),\r\n            rich: rich,\r\n            quantity: Number.parseFloat(quantity),\r\n            hidden: private_derivative\r\n        })\r\n            .then(() => {\r\n                store.dispatch(updateBalance())\r\n            })\r\n    }\r\n\r\n    let card: any = <>\r\n        <h4 className=\"grey-text text-darken-3\">\r\n            {city}\r\n        </h4>\r\n        <div className=\"progress\">\r\n            <div className=\"indeterminate\"/>\r\n        </div>\r\n    </>\r\n\r\n    const buy_btn = (user: string) => {\r\n        if (user === '') {\r\n            return <NavLink\r\n                    className='btn register_btn grey lighten-1 black-text'\r\n                    to='/login'\r\n                >\r\n                    Buy\r\n                </NavLink>\r\n        }\r\n        return <div className=\"buy_btn btn\"\r\n                    onClick={handleBuy}>\r\n            Buy\r\n        </div>\r\n    }\r\n\r\n    if(city !== '') {\r\n        card = <>\r\n            <h4 className=\"grey-text text-darken-3\">\r\n                {city}\r\n            </h4>\r\n            <div className=\"row black-text\">\r\n                <div className=\"col s3\">\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>Temperature</td>\r\n                            <td className='text_right'>{Math.round((weather0.weather[city].current_temp + Number.EPSILON) * 100) / 100 + ' °C'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Wind speed</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_wind_speed + ' meter/sec'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cloudiness</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_clouds + ' %'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pressure</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_pressure + ' hPa'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Humidity</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_humidity + ' %'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Visibility</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_visibility + ' metres'}</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"col s3\">\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Temperature</th>\r\n                            <th className='text_center'>Reach rate</th>\r\n                            <th className='text_right'>Not reach rate</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rates}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"col s3\">\r\n                    <div className='row'>\r\n                        <div className='input-field col s12'>\r\n                            <i className='material-icons prefix'>{temp.image}</i>\r\n                            <input\r\n                                id='temp'\r\n                                name='temp'\r\n                                type='text'\r\n                                value={temp.temp}\r\n                                onChange={async (event: any) => {\r\n                                    changeTemp(event)\r\n                                }}\r\n                                onFocus={event => event.target.select()}\r\n                            />\r\n                            <label htmlFor='temp' className='active label_temperature grey-text text-darken-3'>\r\n                                Temperature [°C]\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='input-field col s12'>\r\n                            <i className='material-icons prefix'>border_color</i>\r\n                            <input\r\n                                id='quantity'\r\n                                name='quantity'\r\n                                type='text'\r\n                                value={quantity}\r\n                                onChange={(event: any) => {\r\n                                    changeQuantity(event)\r\n                                }}\r\n                                onFocus={event => event.target.select()}\r\n                            />\r\n                            <label htmlFor='quantity' className='active label_quantity grey-text text-darken-3'>\r\n                                Quantity\r\n                            </label>\r\n                            <label className='label_rich'>\r\n                                <input type=\"checkbox\" className=\"filled-in\" checked={rich}\r\n                                    onChange={ () => {\r\n                                        changeRich()\r\n                                    }}/>\r\n                                <span className=\"black-text\">Pay if temperature rises above</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"collection label_rich\">\r\n                        <p className=\"collection-item grey lighten-3\"><span className=\"badge black-text\">\r\n                            {Math.round((balance + Number.EPSILON) * 100) / 100 + ' USD'}\r\n                        </span>Balance</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s3\">\r\n                    <div className=\"collection\">\r\n                        <p className=\"collection-item grey lighten-3\"><span className=\"badge black-text\">\r\n                            {tempRate}\r\n                        </span>Rate</p>\r\n                    </div>\r\n                    <div className=\"collection label_rich\">\r\n                        <p className=\"collection-item grey lighten-3\"><span className=\"badge black-text\">\r\n                            {Math.round(Number.parseFloat(tempRate) * Number.parseFloat(quantity)) * 60 * 24 / 100 + ' USD'}\r\n                        </span>Amount</p>\r\n                    </div>\r\n                    <div className='cont_private_label'>\r\n                        <label>\r\n                            <input type=\"checkbox\" className=\"filled-in\" checked={private_derivative}\r\n                                   onChange={() => {\r\n                                       changePrivate_derivative()\r\n                                   }}/>\r\n                            <span className=\"black-text\">Private (only you will see one)</span>\r\n                        </label>\r\n                    </div>\r\n                    {buy_btn(auth.name)}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    return <div className=\"grey lighten-3\">\r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n                <div className=\"col s12\">\r\n                    <NavLink to=\"/\" className=\"breadcrumb\">Home</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <table>\r\n            <tr>\r\n                {cities}\r\n            </tr>\r\n        </table>\r\n        {card}\r\n    </div>\r\n}\r\n","import {update_weather} from './weatherSlice'\r\n\r\nconst axios = require('axios').default\r\n\r\nconst sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const updWeather = async (dispatch: any, getState: any) => {\r\n    return axios.create(getState().auth.request_params).post('/weather/update')\r\n        .then((res: any) => {\r\n            dispatch(update_weather(res.data))\r\n        })\r\n}\r\n\r\nexport const regularUpdateWeather = () => async (dispatch: any, getState: any) => {\r\n    while(true) {\r\n        await sleep(10000)\r\n        await updWeather(dispatch, getState)\r\n    }\r\n}\r\n","import {update_stat} from './statsSlice'\r\n\r\nconst axios = require('axios').default\r\n\r\nconst sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const updStats = async (dispatch: any, getState: any) => {\r\n    console.log('useState')\r\n    let api_addr = '/derivative/stats'\r\n    if (getState().auth.name === '') {\r\n        api_addr = '/derivative/pub_stats'\r\n    }\r\n    console.log(api_addr)\r\n    return axios.create(getState().auth.request_params).post(api_addr)\r\n        .then((res: any) => {\r\n            dispatch(update_stat(res.data.stats))\r\n        })\r\n        .catch((err: any) => console.log(err))\r\n}\r\n\r\nexport const regularUpdateStats = () => async (dispatch: any, getState: any) => {\r\n    while (true) {\r\n        await sleep(10000)\r\n        await updStats(dispatch, getState)\r\n    }\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\r\nimport {connect, useSelector} from 'react-redux'\r\n\r\nimport {Navbar} from './components/Navbar'\r\nimport {Signature} from './components/Signature'\r\n\r\nimport {Session, rename, setSession} from './features/auth/authSlice'\r\nimport {WeatherAll} from './features/weather/weatherSlice'\r\nimport {page_city_change, Stat} from './features/stats/statsSlice'\r\nimport { Derivative } from './features/derivative/derivativeSlice'\r\nimport {\r\n    changeCity, changeTemp, changeRich, changeQuantity,\r\n    changePrivate_derivative, updRate, regularUpdateRate\r\n} from './features/derivative/useDerivative'\r\nimport {regularUpdateBalance, upd_Balance, updateBalance} from './features/auth/useAuth'\r\n\r\nimport { Login } from './pages/loginPage'\r\nimport { AddUser } from './pages/addUser'\r\nimport { About } from './pages/aboutUser'\r\nimport { WeatherP } from './pages/weather'\r\nimport { Forecast } from './pages/forecast'\r\nimport { Futures } from './pages/futures'\r\nimport {Statistic} from './pages/statistic'\r\nimport {regularUpdateWeather, updWeather} from \"./features/weather/useWeather\";\r\nimport {regularUpdateStats, updStats} from \"./features/stats/useStats\";\r\nimport {store} from \"./app/store\";\r\nimport {city_img} from \"./components/Images\";\r\n\r\ninterface State {\r\n    stats: Stat\r\n    auth: Session\r\n    weather: WeatherAll\r\n    derivative: Derivative\r\n}\r\n\r\nconst StatisticPage = connect(() => (state: State) => {\r\n    return {stats: state.stats, baseUrl: state.auth.base}\r\n}, {\r\n    page_city_change: page_city_change\r\n})(Statistic)\r\n\r\nconst NavbarFrame = connect(() => (state: State) => {\r\n    return {auth: state.auth, baseUrl: state.auth.base}\r\n})(Navbar)\r\n\r\nconst AboutPage = connect(() => (state: State) => {\r\n    return {auth: state.auth, baseUrl: state.auth.base}\r\n}, {\r\n    rename: rename, setSession: setSession, updateBalance: updateBalance\r\n})(About)\r\n\r\nconst AddUserPage = connect(() => (state: State) => {\r\n    return {auth: state.auth, baseUrl: state.auth.base}\r\n})(AddUser)\r\n\r\nconst ForecastPage = connect(() => (state: State) => {\r\n    return {weather: state.weather, baseUrl: state.auth.base}\r\n})(Forecast)\r\n\r\nconst WeatherPage = connect(() => (state: State) => {\r\n    return {weather: state.weather, baseUrl: state.auth.base}\r\n})(WeatherP)\r\n\r\nconst LoginPage = connect(() => (state: State) => {\r\n    return {auth: state.auth, baseUrl: state.auth.base}\r\n}, {\r\n    setSession: setSession\r\n})(Login)\r\n\r\nconst FuturesPage = connect(() => (state: State) => {\r\n    return {auth: state.auth, weather0: state.weather, derivative0:\r\n        state.derivative, baseUrl: state.auth.base}\r\n}, {\r\n    changeCity: changeCity,\r\n    changeTemp: changeTemp,\r\n    changeRich: changeRich,\r\n    changeQuantity: changeQuantity,\r\n    changePrivate_derivative: changePrivate_derivative\r\n})(Futures)\r\n\r\nconst initializeData = () => async (dispatch: any, getState: any) => {\r\n    try {\r\n        await updWeather(dispatch, getState)\r\n        await updRate(dispatch, getState)\r\n        await updStats(dispatch, getState)\r\n        await upd_Balance(dispatch, getState)\r\n        store.dispatch(regularUpdateWeather())\r\n        store.dispatch(regularUpdateRate())\r\n        store.dispatch(regularUpdateBalance())\r\n        store.dispatch(regularUpdateStats())\r\n        city_img.forEach((picture) => {\r\n            const img = new Image()\r\n            img.src = picture\r\n        })\r\n    } catch {\r\n        console.log('error')\r\n    }\r\n}\r\n\r\nconst App = ({loadingState, initializeData}: {loadingState: any, initializeData: any}) => {\r\n    useEffect(() => {initializeData()}, [])\r\n\r\n    return (\r\n        <Router basename={useSelector((state: State) => state.auth.base)}>\r\n            <NavbarFrame />\r\n            <div className='App'>\r\n                <Switch>\r\n                    <Route exact path='/' component={ FuturesPage } />\r\n                    <Route exact path='/login' component={ LoginPage } />\r\n                    <Route exact path='/register' component={ AddUserPage } />\r\n                    <Route exact path='/about' component={ AboutPage } />\r\n                    <Route exact path='/weather' component={ WeatherPage } />\r\n                    <Route path='/forecast/:city' component={ ForecastPage } />\r\n                    <Route exact path='/statistic' component={ StatisticPage }  />\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n            <Signature />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    state => ({loadingState: state}),\r\n    {initializeData}\r\n)(App)\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {StatDetail} from '../features/stats/statsSlice'\r\nimport {city_img} from '../components/Images'\r\n\r\nexport const Statistic = ({stats, page_city_change, baseUrl}: any): any => {\r\n\r\n    const show = (s: StatDetail, index: number) =>\r\n        <table className={[0].map((condition) => {\r\n            if(index % 2 === 0) {\r\n                return \"striped collection-item yellow lighten-4 grey-text text-darken-3\"\r\n            } else {\r\n                return \"striped collection-item green lighten-4 grey-text text-darken-3\"\r\n            }\r\n        })[0]}>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Completed</td>\r\n                    <td className='statistics_table_right'>{s.completed.toString()}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Paid</td>\r\n                    <td className='statistics_table_right'>{s.paid + ' USD'}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Temperature</td>\r\n                    <td className='statistics_table_right'>{s.temp}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Quantity</td>\r\n                    <td className='statistics_table_right'>{s.quantity}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Rises above</td>\r\n                    <td className='statistics_table_right'>{s.temp_reach.toString()}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Privacy</td>\r\n                    <td className='statistics_table_right'>{s.hidden.toString()}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Duration</td>\r\n                    <td className='statistics_table_right'>{s.duration}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Duration left</td>\r\n                    <td className='statistics_table_right'>{s.duration_left}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Buyer</td>\r\n                    <td className='statistics_table_right'>{s.email}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    const cities: any = Object.entries(stats.city).map((city: any, index: number) => {\r\n            const tab_content: any = [\r\n                'No futures',\r\n                'Quantity of futures: ' + city[1].length,\r\n                '',\r\n            ]\r\n            if (city[1].length !== 0) {\r\n                tab_content[0] = city[1].map((detail: any, index2: number) => show(detail, index2))\r\n            }\r\n            if (stats.page[index] === undefined) {\r\n                window.location.assign('about')\r\n            }\r\n            const re: any = []\r\n            re.push(\r\n                    <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <img className='statistics_img' src={city_img[index]} alt={city[0]}/>\r\n                            <span className=\"card-title\">{city[0]}</span>\r\n                        </div>\r\n                        <div className=\"card-tabs\">\r\n                            <ul className=\"tabs tabs-fixed-width\">\r\n                                <li className=\"tab statistics_pointer\" onClick={() => {\r\n                                    page_city_change({index: index, payload:\r\n                                            {index: 0, active: ['green lighten-4', '', '']}})\r\n                                }}>\r\n                                    <p className={stats.page[index].active[0]}>Futures</p>\r\n                                </li>\r\n                                <li className=\"tab statistics_pointer\" onClick={() => {\r\n                                    page_city_change({index: index, payload:\r\n                                            {index: 1, active: ['', 'green lighten-4', '']}})\r\n                                }}>\r\n                                    <p className={stats.page[index].active[1]}>Statistic</p>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            )\r\n            return re.concat(tab_content[stats.page[index].index])\r\n    })\r\n\r\n    let view: any = []\r\n\r\n    let i = 0\r\n    do {\r\n        view.push(\r\n            <tr>\r\n                {cities.map((city: any) => {\r\n                    if (city.length > i) {\r\n                        return <td className=\"\">{city[i]}</td>\r\n                    } else {\r\n                        return <td/>\r\n                    }\r\n                })}\r\n            </tr>\r\n        )\r\n        i++\r\n    } while (Math.max(...cities.map((city: any) => city.length)) > i)\r\n\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <NavLink to=\"/\" className=\"breadcrumb\">Home</NavLink>\r\n                        <NavLink to=\"/statistic\" className=\"breadcrumb\">Statistic</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <table>\r\n                <tbody>\r\n                    {view}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createBrowserHistory } from 'history'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\nimport {store} from './app/store'\r\nimport {Provider} from 'react-redux'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const history = createBrowserHistory({\r\n    basename: process.env.PUBLIC_URL\r\n})\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    console.log('NODE_ENV')\r\n    const pathname = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)\r\n    if (pathname) {\r\n        base = pathname[0]\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Helmet>\r\n            <link href='https://fonts.googleapis.com/icon?family=Material+Icons' rel='stylesheet'/>\r\n            <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\r\n            <title>Forecast trading emulator</title>\r\n            <base href={base + '/'}/>\r\n        </Helmet>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}