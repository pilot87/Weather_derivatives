{"version":3,"sources":["components/Navbar.tsx","features/auth/authSlice.ts","HongKong.jpg","San Francisco.jpg","components/Images.ts","NewYork.jpg","Paris.jpg","features/stats/statsSlice.ts","features/derivative/derivativeSlice.ts","features/derivative/useDerivative.ts","pages/loginPage.tsx","pages/addUser.tsx","pages/aboutUser.tsx","pages/weather.tsx","pages/forecast.tsx","features/weather/weatherSlice.ts","app/store.ts","features/auth/useAuth.ts","pages/futures.tsx","App.tsx","pages/statistic.tsx","serviceWorker.ts","features/stats/useStats.ts","features/weather/useWeather.ts","index.tsx"],"names":["base","console","log","exec","window","location","pathname","es","name","email","token","JSON","parse","document","cookie","e","stringify","initialState","balance","request_params","baseURL","timeout","headers","authSlice","createSlice","reducers","setSession","state","action","payload","rename","updBalance","actions","city_img","hk","friscoimg","city","page","Array","length","fill","index","active","statsSlice","update_stat","Object","entries","key","value","page_city_push","push","page_city_change","daily","temp","image","rich","tempRate","quantity","private_derivative","init_page","setCity","setTemp","setRich","setTempRate","setQuantity","setPrivate_derivative","update_rate","rate","rate2","expected_value","standard_deviation","axios","require","default","sleep","ms","Promise","resolve","setTimeout","Phi","Math","round","X","T","abs","Prob","exp","normalcdf","upd","dispatch","getState","init_city","auth","create","post","then","res","data","stats","forEach","di","step","t","i","max","di2","derivative","Number","EPSILON","catch","err","askRate","lvl","weather","amount","hidden","update_weather","store","configureStore","reducer","authReducer","weatherReducer","derivativeReducer","statsReducer","updateBalance","a","StatisticPage","connect","baseUrl","cities","map","tab_content","detail","index2","s","className","condition","paid","temp_reach","toString","duration","duration_left","show","undefined","replace","re","src","alt","onClick","concat","view","href","NavbarFrame","user","id","AboutPage","useState","username","msg","password","form","setForm","message","color","setMsg","msg2","setMsg2","changeHandler","event","target","focusHandler","blurHandler","response","type","onChange","onFocus","onBlur","htmlFor","AddUserPage","errors","handleRegister","parseErrors","record","find","param","ForecastPage","useParams","hourly","hourly_temp","tmp","hourly_wind_speed","hourly_clouds","hourly_pressure","hourly_humidity","hourly_visibility","WeatherPage","current_temp","current_wind_speed","current_clouds","current_pressure","current_humidity","current_visibility","LoginPage","FuturesPage","weather0","derivative0","changeCity","changeTemp","test","parseFloat","changeRich","changeQuantity","changePrivate_derivative","request","rates","d","card","select","checked","App","basename","useSelector","exact","path","render","component","to","Boolean","hostname","match","keys","updateRate","headRoot","head","Head","ReactDOM","createPortal","this","props","children","React","Component","history","createBrowserHistory","process","StrictMode","rel","content","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"wRAGIA,EAAO,GAEPC,QAAQC,IAAI,YAEZF,EAAO,kBAAkBG,KAAKC,OAAOC,SAASC,UAAU,GAGrD,I,QCOHC,EAAW,CAAEC,KAAM,GAAIC,MAAO,GAAIC,MAAO,IAE7C,IACIH,EAAKI,KAAKC,MAAMC,SAASC,QAE7B,MAAOC,IACHF,SAASC,OAASH,KAAKK,UAAUT,GAGrC,IAAIP,EAAO,GAGPA,EAAO,kBAAkBG,KAAKC,OAAOC,SAASC,UAAU,GAG5D,IAAMW,EAAwB,CAC1BT,KAAMD,EAAGC,KACTC,MAAOF,EAAGE,MACVS,QAAS,EACTlB,KAAMA,EACNmB,eAAgB,CAEZC,QAASpB,EAAO,OAChBqB,QAAS,IACTC,QAAS,CAAE,eAAgB,mBAAoB,cAAiBf,EAAGG,SAI9Da,EAAYC,YAAY,CACjChB,KAAM,OACNS,eACAQ,SAAU,CACNC,WADM,SACKC,EAAOC,GAA8B,IAAD,EACZA,EAAOC,QAA9BrB,EADmC,EACnCA,KAAMC,EAD6B,EAC7BA,MACRF,EAAK,CAAEC,KAAMA,EAAMC,MAAOA,EAAOC,MAAO,UAFH,EACtBA,OAErBG,SAASC,OAASH,KAAKK,UAAUT,GACjCoB,EAAMnB,KAAOA,EACbmB,EAAMlB,MAAQA,EACdkB,EAAMR,eAAiB,CACnBC,QAAS,UACTC,QAAS,IACTC,QAAS,CAAE,eAAgB,mBAAoB,cAAiBf,EAAGG,SAG3EoB,OAbM,SAaCH,EAAOC,GACV,IAAMrB,EAAKI,KAAKC,MAAMC,SAASC,QAC/BP,EAAGC,KAAOoB,EAAOC,QACjBhB,SAASC,OAASH,KAAKK,UAAUT,GACjCoB,EAAMnB,KAAOoB,EAAOC,SAExBE,WAnBM,SAmBKJ,EAAOC,GAA6C,IACpDV,EAAWU,EAAOC,QAAlBX,QACPS,EAAMT,QAAUA,M,EAKsBK,EAAUS,QAA7CN,E,EAAAA,WAAYI,E,EAAAA,OAAQC,E,EAAAA,WAEpBR,IAAf,Q,QC5Ee,MAA0B,qCCA1B,MAA0B,0CCK5BU,EAAW,CAACC,ECLV,IAA0B,oCDKLC,EELrB,IAA0B,mCCkCnClB,EAAqB,CACvBmB,KAAM,GACNC,KAAO,IAAIC,MAAML,EAASM,QAASC,KAAK,CAACC,MAAO,EAAGC,OAAQ,CAAC,kBAAmB,GAAI,OAG1EC,EAAanB,YAAY,CAClChB,KAAM,QACNS,eACAQ,SAAU,CACNmB,YADM,SACMjB,EAAaC,GACrB,cAA2BiB,OAAOC,QAAQlB,EAAOC,SAAjD,eAA2D,CAAC,IAAD,sBAA/CkB,EAA+C,KAA1CC,EAA0C,KACvDrB,EAAMS,KAAKW,GAAOC,IAG1BC,eANM,SAMStB,EAAaC,GACxBD,EAAMU,KAAKa,KAAKtB,EAAOC,UAE3BsB,iBATM,SASWxB,EAAaC,GAC1BD,EAAMU,KAAKT,EAAOC,QAAQY,OAASb,EAAOC,QAAQA,Y,EAKGc,EAAWX,QAA7DY,E,EAAAA,YAA6BO,G,EAAhBF,e,EAAgBE,kBAE7BR,IAAf,Q,uCCfapB,EAAYC,YAAY,CACjChB,KAAM,aACNS,aAjB6B,CAC7BmC,MAAO,GACPf,KAAM,CACFD,KAAM,GACNiB,KAAM,CACFA,KAAM,IACNC,MAAO,YAEXC,MAAM,EACNC,SAAU,QACVC,SAAU,IACVC,oBAAoB,IAOxBjC,SAAU,CACNkC,UADM,SACIhC,EAAmBC,GACzBD,EAAMU,KAAOT,EAAOC,SAExB+B,QAJM,SAIEjC,EAAmBC,GACvBD,EAAMU,KAAKD,KAAOR,EAAOC,SAE7BgC,QAPM,SAOElC,EAAmBC,GACvBD,EAAMU,KAAKgB,KAAOzB,EAAOC,SAE7BiC,QAVM,SAUEnC,EAAmBC,GACvBD,EAAMU,KAAKkB,KAAO3B,EAAOC,SAE7BkC,YAbM,SAaMpC,EAAmBC,GAC3BD,EAAMU,KAAKmB,SAAW5B,EAAOC,SAEjCmC,YAhBM,SAgBMrC,EAAmBC,GAC3BD,EAAMU,KAAKoB,SAAW7B,EAAOC,SAEjCoC,sBAnBM,SAmBgBtC,EAAmBC,GACrCD,EAAMU,KAAKqB,mBAAqB9B,EAAOC,SAE3CqC,YAtBM,SAsBMvC,EAAmBC,GAQtBA,EAAOC,QAAQO,QAAQT,EAAMyB,QAC9BzB,EAAMyB,MAAMxB,EAAOC,QAAQO,MAAQ,CAACiB,KAAM,GAAIc,KAAM,GAAIC,MAAO,GAC/DC,eAAgB,EAAGC,mBAAoB,IAG3C3C,EAAMyB,MAAMxB,EAAOC,QAAQO,MAAQ,CAC/BiB,KAAMzB,EAAOC,QAAQwB,KACrBc,KAAMvC,EAAOC,QAAQsC,KACrBC,MAAOxC,EAAOC,QAAQuC,MACtBE,mBAAoB1C,EAAOC,QAAQyC,mBACnCD,eAAgBzC,EAAOC,QAAQwC,oB,EAe3C9C,EAAUS,QARVkC,E,EAAAA,YACAP,E,EAAAA,UACAC,E,EAAAA,QACAC,E,EAAAA,QACAC,E,EAAAA,QACAC,E,EAAAA,YACAC,E,EAAAA,YACAC,E,EAAAA,sBAGW1C,IAAf,QCrGMgD,EAAQC,EAAQ,IAASC,QAEzBC,GAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAahDR,GAAQ,SAACG,EACAD,EACAhB,EACAE,GAEX,IAAIwB,EAgBJ,OAd0B,IAAvBT,EAEKS,EADA1B,EAAOgB,EACD,EAEA,GAGVU,EAAMC,KAAKC,MAAM,IAxBP,SAACC,GACf,IAAMC,EAAI,GAAK,EAAI,SAAYH,KAAKI,IAAIF,IAEpCG,EADM,SAAYL,KAAKM,KAAKJ,EAAIA,EAAI,GACzBC,GAAK,SAAYA,GAAkBA,GAAK,SAAWA,GAAqB,SAAJA,EAAX,WAAlC,WAItC,OAHID,EAAI,IACJG,EAAO,EAAIA,GAERA,EAiBuBE,EAAWlC,EAAOgB,GACxCC,IAAuB,IACxBf,IACCwB,EAAM,EAAIA,IAIX,KAAOA,GAGZS,GAAM,SAACC,EAAeC,EAAeC,GACvC1F,QAAQC,IAAI,OACgB,KAAzBwF,IAAWE,KAAKpF,MACf+D,EAAMsB,OAAOH,IAAWE,KAAKzE,gBAAgB2E,KAAK,4BAC7CC,MAAK,SAACC,GACHA,EAAIC,KAAKC,MAAMC,SAAQ,SAAC/D,GACpB,IAAIiB,EACA+C,EACAC,EAAO,EAGX,EAAG,CACChD,EAAO,GACP+C,EAAK,GAEL,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAWA,IAC3BjD,EAAKH,KAAKd,EAAKiC,gBAPb,EAOmCiC,GAAKD,GAL/C,oBAQiBhD,GARjB,IAQC,2BAAsB,CAAC,IAAZiD,EAAW,QACZC,EAAIpC,GACN/B,EAAKkC,mBACLlC,EAAKiC,eACLiC,GACA,GACJF,EAAGlD,KAAKqD,IAdb,8BAiBCF,GAAc,QACTrB,KAAKwB,IAAL,MAAAxB,KAAI,YAAQoB,IAAM,GAE3B,IA1BkC,EA0B9BK,EAAM,GA1BwB,cA4BlBL,GA5BkB,IA4BlC,2BAAoB,CAAC,IAAVG,EAAS,QAChBE,EAAIvD,KAAK,EAAIqD,IA7BiB,8BAgClCd,EAASvB,EAAY,CACjB9B,KAAMA,EAAK5B,KACX2D,KAAMiC,EACNhC,MAAOqC,EACPpD,KAAMA,EACNgB,eAAgBjC,EAAKiC,eACrBC,mBAAoBlC,EAAKkC,yBAG7BqB,IACA1F,QAAQC,IAAIyF,GACZF,EAAS9B,EAAU,CACfvB,KAAMuD,EACNtC,KAAM,CACFA,KAAM,IACNC,MAAO,YAEXG,SAAU,IACVD,SAAUwB,KAAKC,MAKO,KALAd,GAClBuB,IAAWgB,WAAWtD,MAAMuC,GAAWrB,mBACvCoB,IAAWgB,WAAWtD,MAAMuC,GAAWtB,eACvC,GACA,GACAsC,OAAOC,UAAoB,IAAM,KACrClD,oBAAoB,EACpBH,MAAM,SAIjBsD,OAAM,SAACC,GAAD,OAAc7G,QAAQC,IAAI4G,OAiBvCC,GAAU,SAACtB,EAAeC,GAC5B,IAAMtD,EAAOsD,IAAWgB,WAAWrE,KAAKD,KAClC4E,EAAM7C,GAAKuB,IAAWgB,WAAWtD,MAAMhB,GAAMkC,mBAC/CoB,IAAWgB,WAAWtD,MAAMhB,GAAMiC,eAClCqB,IAAWgB,WAAWrE,KAAKgB,KAAKA,KAChCqC,IAAWgB,WAAWrE,KAAKkB,MAC/BtD,QAAQC,IAAI8G,GACZvB,EAAS1B,EAAYiB,KAAKC,MAA+B,KAAxB+B,EAAML,OAAOC,UAAoB,IAAM,Q,gBClItErC,GAAQC,EAAQ,IAASC,QCDzBF,GAAQC,EAAQ,IAASC,QCAzBF,GAAQC,EAAQ,IAASC,QCQ3BzE,GAAO,GAEPC,QAAQC,IAAI,YAEZF,GAAO,kBAAkBG,KAAKC,OAAOC,SAASC,UAAU,GAGrD,ICbHN,GAAO,GAEPC,QAAQC,IAAI,YAEZF,GAAO,kBAAkBG,KAAKC,OAAOC,SAASC,UAAU,GAGrD,IC4CMiB,GAAYC,YAAY,CACjChB,KAAM,UACNS,aAlB6B,CAC7BgG,QAAS,GACT5E,KAAM,CACFgB,KAAM,CACFA,KAAM,IACNC,MAAO,YAEXG,SAAU,IACVF,MAAM,EACNnB,KAAM,SACN+B,KAAM,MACN+C,OAAQ,QACRC,QAAQ,IAOZ1F,SAAU,CACN2F,eADM,SACSzF,EAAmBC,GAC9BD,EAAMsF,QAAUrF,EAAOC,YAKpBuF,GAAmB7F,GAAUS,QAA7BoF,eAEA7F,MAAf,QC3Da8F,GAAQC,YAAe,CAClCC,QAAS,CACP3B,KAAM4B,EACNP,QAASQ,GACTf,WAAYgB,EACZxB,MAAOyB,KCXLpD,GAAQC,EAAQ,IAASC,QAEzBC,GAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAGhDa,GAAM,SAACC,EAAeC,GACI,KAAzBA,IAAWE,KAAKpF,MACf+D,GAAMsB,OAAOH,IAAWE,KAAKzE,gBAAgB2E,KAAK,oBAC7CC,MAAK,SAACC,GACHP,EAAS1D,EAAWiE,EAAIC,WAY3B2B,GAAgB,yDAAM,WAAOnC,EAAeC,GAAtB,SAAAmC,EAAA,6DAC/BrC,GAAIC,EAAUC,GADiB,kBAExBd,QAAQC,WAFgB,2CAAN,yDCfvBN,GAAQC,EAAQ,IAASC,QCsBzBqD,GAAgBC,aAAQ,kBAAM,SAACpG,GACjC,MAAO,CAACuE,MAAOvE,EAAMuE,MAAO8B,QAASrG,EAAMiE,KAAK5F,SACjD,CACCmD,iBAAkBA,GAHA4E,EC1BG,SAAC,GAAkD,IAAjD7B,EAAgD,EAAhDA,MAAO/C,EAAyC,EAAzCA,iBA8CxB8E,GA9CiE,EAAvBD,QA8C5BnF,OAAOC,QAAQoD,EAAM9D,MAAM8F,KAAI,SAAC9F,EAAWK,GACvD,IAAM0F,EAAmB,CACrB,aACA,wBAA0B/F,EAAK,GAAGG,OAClC,IAEmB,IAAnBH,EAAK,GAAGG,SACR4F,EAAY,GAAK/F,EAAK,GAAG8F,KAAI,SAACE,EAAaC,GAAd,OAnD5B,SAACC,EAAe7F,GAAhB,OACT,uBAAO8F,UAAW,CAAC,GAAGL,KAAI,SAACM,GACvB,OAAG/F,EAAQ,IAAM,EACN,mEAEA,qEAEZ,GANH,SAOI,kCACI,+BACI,sCACA,oBAAI8F,UAAU,yBAAd,SAAwCD,EAAEG,KAAO,YAErD,+BACI,6CACA,oBAAIF,UAAU,yBAAd,SAAwCD,EAAEjF,UAE9C,+BACI,0CACA,oBAAIkF,UAAU,yBAAd,SAAwCD,EAAE7E,cAE9C,+BACI,6CACA,oBAAI8E,UAAU,yBAAd,SAAwCD,EAAEI,WAAWC,gBAEzD,+BACI,yCACA,oBAAIJ,UAAU,yBAAd,SAAwCD,EAAEnB,OAAOwB,gBAErD,+BACI,0CACA,oBAAIJ,UAAU,yBAAd,SAAwCD,EAAEM,cAE9C,+BACI,+CACA,oBAAIL,UAAU,yBAAd,SAAwCD,EAAEO,mBAE9C,+BACI,+CACA,oBAAIN,UAAU,yBAAd,SAAwCD,EAAE7H,gBAYgBqI,CAAKV,EAAQC,YAErDU,IAAtB7C,EAAM7D,KAAKI,IACXrC,OAAOC,SAAS2I,QAAQ,SAE5B,IAAMC,EAAU,GAyBhB,OAxBAA,EAAG/F,KACK,sBAAKqF,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,iBAAiBW,IAAKjH,EAASQ,GAAQ0G,IAAK/G,EAAK,KAChE,sBAAMmG,UAAU,aAAhB,SAA8BnG,EAAK,QAEvC,qBAAKmG,UAAU,YAAf,SACI,qBAAIA,UAAU,wBAAd,UACI,oBAAIA,UAAU,yBAAyBa,QAAS,WAC5CjG,EAAiB,CAACV,MAAOA,EAAOZ,QACxB,CAACY,MAAO,EAAGC,OAAQ,CAAC,kBAAmB,GAAI,QAFvD,SAII,mBAAG6F,UAAWrC,EAAM7D,KAAKI,GAAOC,OAAO,GAAvC,uBAEJ,oBAAI6F,UAAU,yBAAyBa,QAAS,WAC5CjG,EAAiB,CAACV,MAAOA,EAAOZ,QACxB,CAACY,MAAO,EAAGC,OAAQ,CAAC,GAAI,kBAAmB,QAFvD,SAII,mBAAG6F,UAAWrC,EAAM7D,KAAKI,GAAOC,OAAO,GAAvC,kCAMjBuG,EAAGI,OAAOlB,EAAYjC,EAAM7D,KAAKI,GAAOA,YAGnD6G,EAAY,GAEZ/C,EAAI,EACR,GACI+C,EAAKpG,KACD,6BACK+E,EAAOC,KAAI,SAAC9F,GACT,OAAIA,EAAKG,OAASgE,EACP,oBAAIgC,UAAU,GAAd,SAAkBnG,EAAKmE,KAEvB,6BAKvBA,UACKvB,KAAKwB,IAAL,MAAAxB,KAAI,YAAQiD,EAAOC,KAAI,SAAC9F,GAAD,OAAeA,EAAKG,YAAWgE,GAG/D,OACI,qCACI,8BACI,qBAAKgC,UAAU,cAAf,SACI,sBAAKA,UAAU,UAAf,UACI,mBAAGgB,KAAK,GAAGhB,UAAU,aAArB,kBACA,mBAAGgB,KAAK,YAAYhB,UAAU,aAA9B,8BAIZ,gCACI,gCACKe,YDrFfE,GAAczB,aAAQ,kBAAM,SAACpG,GAC/B,MAAO,CAACiE,KAAMjE,EAAMiE,KAAMoC,QAASrG,EAAMiE,KAAK5F,SAD9B+H,EnB3BE,SAAC,GAAsB,IACnC0B,EADkC,EAApB7D,KACFpF,KAClB,MAAa,KAATiJ,EACA,8BACI,sBAAKlB,UAAU,cAAf,UACI,mBAAGgB,KAAMvJ,EAAMuI,UAAU,aAAzB,8BACA,oBAAImB,GAAG,aAAanB,UAAU,6BAA9B,SACI,6BAAI,mBAAGgB,KAAMvJ,EAAO,SAAhB,oCAOhB,8BACI,sBAAKuI,UAAU,cAAf,UACI,mBAAGgB,KAAMvJ,EAAMuI,UAAU,aAAzB,8BACA,qBAAImB,GAAG,aAAanB,UAAU,6BAA9B,UACI,6BAAI,mBAAGgB,KAAMvJ,EAAO,WAAhB,uBACJ,6BAAI,mBAAGuJ,KAAMvJ,EAAO,aAAhB,yBACJ,6BAAI,mBAAGuJ,KAAMvJ,EAAO,WAAhB,uBACJ,6BAAI,oBAAGuJ,KAAMvJ,EAAO,SAAhB,oBAAkCyJ,EAAlC,oBmBUlBE,GAAY5B,aAAQ,kBAAM,SAACpG,GAC7B,MAAO,CAACiE,KAAMjE,EAAMiE,KAAMoC,QAASrG,EAAMiE,KAAK5F,SAC/C,CACC8B,OAAQA,EAAQJ,WAAYA,EAAYkG,cAAeA,IAHzCG,EPrCG,SAAC,GAAkE,IAAjEnC,EAAgE,EAAhEA,KAAM9D,EAA0D,EAA1DA,OAAQJ,EAAkD,EAAlDA,WAAqBkG,GAA6B,EAAtCI,QAAsC,EAA7BJ,eAA6B,EAE3DgC,mBACpB,CAACC,SAAU,CAACC,IAAK,GAAInI,MAAO,IAAKoI,SAAU,CAACD,IAAK,GAAInI,MAAO,MAHmB,mBAE5EqI,EAF4E,KAEtEC,EAFsE,OAM7DL,mBAAS,CAC3BM,QAAS,GAAIC,MAAO,SAP2D,mBAM5EL,EAN4E,KAMvEM,EANuE,OAU3DR,mBAAS,CAC7BM,QAAS,GAAIC,MAAO,SAX2D,mBAU5EE,EAV4E,KAUtEC,EAVsE,KAc7EC,EAAgB,SAACC,GACnBP,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,eAGvE+I,EAAe,SAACF,GAClBP,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,eAGvEgJ,EAAc,SAACH,GACU,KAAvBA,EAAMC,OAAOzH,OACbiH,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,QAI3EkG,EAAItD,GAAMsB,OAAOD,EAAKzE,gBAsC5B,OACI,qCACI,8BACI,qBAAKoH,UAAU,cAAf,SACI,sBAAKA,UAAU,UAAf,UACI,mBAAGgB,KAAK,GAAGhB,UAAU,aAArB,kBACA,mBAAGgB,KAAK,QAAQhB,UAAU,aAA1B,0BAIhB,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,sCAAf,UACI,mBAAGA,UAAU,6BAAb,SACK,aAAe3C,EAAKnF,QACzB,mBAAG8H,UAAU,6BAAb,SACK,aAAe3C,EAAKpF,OACzB,mBAAG+H,UAAU,6BAAb,SACK,eAAiB3C,EAAK1E,eAGnC,qBAAKqH,UAAU,cAAf,SACI,wBACIA,UAAU,2CACVa,QA5DW,WACvBvB,EAAE/B,KAAK,yBAA0B,CAAE+D,SAAUG,EAAKH,SAASC,MACtD/D,MAAK,SAACC,GACH4B,OAEHf,OAAM,SAACC,GAAD,OAAcsD,EACjB,CAACF,QAASpD,EAAI8D,SAAS3E,KAAKiE,QAASC,MAAO,YAoD5C,4CAOJ,sBAAM5B,UAAU,UAAhB,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,wBAAb,0BACA,uBACImB,GAAG,WACHlJ,KAAK,WACLqK,KAAK,OACL7H,MAAOgH,EAAKH,SAASC,IACrBgB,SAAUP,EACVQ,QAASL,EACTM,OAAQL,IAEZ,uBAAOM,QAAQ,WAAW1C,UAAW,WAAayB,EAAKH,SAASlI,MAAhE,iCAIZ,qBAAK4G,UAAU,cAAf,SACI,wBACIA,UAAU,2CACVa,QA3EK,WACjBvB,EAAE/B,KAAK,kBAAmB,CAAE+D,SAAUG,EAAKH,SAASC,MAC/C/D,MAAK,SAACC,GACHlE,EAAOkE,EAAIC,KAAK4D,UAChBO,EAAO,CAACF,QAAS,YAAclE,EAAIC,KAAK4D,SAAW,IAAKM,MAAO,aAElEtD,OAAM,SAACC,GAAD,OAAcsD,EACjB,CAACF,QAASpD,EAAI8D,SAAS3E,KAAKiE,QAASC,MAAO,YAkE5C,+BAOJ,qBAAK5B,UAAW,SAAWuB,EAAIK,MAAQ,uBAAvC,SACKL,EAAII,UAET,sBAAM3B,UAAU,UAAhB,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,wBAAb,wBACA,uBACImB,GAAG,WACHlJ,KAAK,WACLqK,KAAK,WACL7H,MAAOgH,EAAKD,SAASD,IACrBgB,SAAUP,EACVQ,QAASL,EACTM,OAAQL,IAEZ,uBAAOM,QAAQ,WAAW1C,UAAW,WAAayB,EAAKD,SAASpI,MAAhE,iCAIZ,qBAAK4G,UAAU,cAAf,SACI,wBACIA,UAAU,2CACVa,QA5FO,WACnBvB,EAAE/B,KAAK,oBAAqB,CAAEiE,SAAUC,EAAKD,SAASD,MACjD/D,MAAK,SAACC,GACHsE,EAAQ,CAACJ,QAAS,uBAAwBC,MAAO,aAEpDtD,OAAM,SAACC,GAAD,OAAcwD,EACjB,CAACJ,QAASpD,EAAI8D,SAAS3E,KAAKiE,QAASC,MAAO,YAoF5C,+BAOJ,qBAAK5B,UAAW,SAAW8B,EAAKF,MAAQ,uBAAxC,SACKE,EAAKH,UAGV,qBAAK3B,UAAU,6BAAf,SACI,wBACIA,UAAU,2CACVa,QA9FK,WACjB1H,EAAW,CAAEjB,MAAO,GAAID,KAAM,GAAIE,MAAO,KACzCN,OAAOC,SAAS2I,QAAQ,UA0FhB,+BO9GVkC,GAAcnD,aAAQ,kBAAM,SAACpG,GAC/B,MAAO,CAACiE,KAAMjE,EAAMiE,KAAMoC,QAASrG,EAAMiE,KAAK5F,SAD9B+H,ER3CG,SAAC,GAA+B,IAA9BnC,EAA6B,EAA7BA,KAA6B,KAAvBoC,QAEH4B,mBAAS,CAC7BnJ,MAAO,CAACqJ,IAAK,GAAInI,MAAO,iBAAkBoI,SAAU,CAACD,IAAK,GAAInI,MAAO,iBACrEkI,SAAU,CAACC,IAAK,GAAInI,MAAO,oBAJmB,mBAE3CqI,EAF2C,KAErCC,EAFqC,OAO5BL,mBAAS,CAC3BM,QAAS,GAAIC,MAAO,OAAQgB,OAAQ,CAAC,MAAS,GAAI,SAAY,GAAI,SAAY,MARhC,mBAO3CrB,EAP2C,KAOtCM,EAPsC,KAW5CG,EAAgB,SAACC,GACnBP,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,4BAGvE+I,EAAe,SAACF,GAClBP,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,4BAGvEgJ,EAAc,SAACH,GACU,KAAvBA,EAAMC,OAAOzH,OACbiH,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,qBAI3EkG,EAAItD,GAAMsB,OAAOD,EAAKzE,gBAEtBiK,EAAc,uCAAG,4BAAAvD,EAAA,sDACbwD,EAAc,SAACvE,GACjB,IAAMwE,EAAS,CAAC,MAAS,GAAI,SAAY,GAAI,SAAY,IACnD7K,EAAQqG,EAAIyE,MAAK,SAACxK,GAAD,MAAwB,UAAZA,EAAEyK,SACjC/K,IAAO6K,EAAO7K,MAAQA,EAAMqJ,KAChC,IAAMD,EAAW/C,EAAIyE,MAAK,SAACxK,GAAD,MAAwB,aAAZA,EAAEyK,SACpC3B,IAAUyB,EAAOzB,SAAWA,EAASC,KACzC,IAAMC,EAAWjD,EAAIyE,MAAK,SAACxK,GAAD,MAAwB,aAAZA,EAAEyK,SAExC,OADIzB,IAAUuB,EAAOvB,SAAWA,EAASD,KAClCwB,GAEXzD,EAAE/B,KAAK,iBAAkB,CAACrF,MAAOuJ,EAAKvJ,MAAMqJ,IAAKD,SAAUG,EAAKH,SAASC,IACrEC,SAAUC,EAAKD,SAASD,MACvB/D,MAAK,SAACC,GACHoE,EACI,CAACF,QAASlE,EAAIC,KAAKiE,QAASC,MAAO,QAC/BgB,OAAQ,CAAC,MAAS,GAAI,SAAY,GAAI,SAAY,MAE1D/K,OAAOC,SAAS2I,QAAQ,YAE3BnC,OAAM,SAACC,GAAD,OAAcsD,EACjB,CAACF,QAA+B,MAArBpD,EAAI8D,SAAS3E,KAAgBa,EAAI8D,SAAS3E,KAAKiE,QAAUpD,EAAIb,KAAKiE,QAASC,MAAO,MACzFgB,OAAWrE,EAAI8D,UAAc9D,EAAI8D,SAAS3E,KAAKkF,OAAUE,EAAYvE,EAAI8D,SAAS3E,KAAKkF,QACnF,CAAC,MAAS,GAAI,SAAY,GAAI,SAAY,SAvBvC,2CAAH,qDA2BpB,OACI,qCACI,8BACI,qBAAK5C,UAAU,cAAf,SACI,sBAAKA,UAAU,UAAf,UACI,mBAAGgB,KAAK,GAAGhB,UAAU,aAArB,kBACA,mBAAGgB,KAAK,WAAWhB,UAAU,aAA7B,6BAIZ,uBAAM3G,OAAO,WAAW2G,UAAU,+BAAlC,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,wBAAb,mBACA,uBACImB,GAAG,QACHlJ,KAAK,QACLqK,KAAK,OACL7H,MAAOgH,EAAKvJ,MAAMqJ,IAClBgB,SAAUP,EACVQ,QAASL,EACTM,OAAQL,IAEZ,uBAAOM,QAAQ,QAAQ1C,UAAWyB,EAAKvJ,MAAMkB,MAA7C,sBAEJ,qBAAK4G,UAAU,oBAAf,SACKuB,EAAIqB,OAAO1K,WAGpB,sBAAK8H,UAAU,MAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,wBAAb,0BACA,uBACImB,GAAG,WACHlJ,KAAK,WACLqK,KAAK,OACL7H,MAAOgH,EAAKH,SAASC,IACrBgB,SAAUP,EACVQ,QAASL,EACTM,OAAQL,IAEZ,uBAAOM,QAAQ,WAAW1C,UAAWyB,EAAKH,SAASlI,MAAnD,0BAEJ,qBAAK4G,UAAU,oBAAf,SACKuB,EAAIqB,OAAOtB,cAGpB,sBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,wBAAb,wBACA,uBACImB,GAAG,WACHlJ,KAAK,WACLqK,KAAK,WACL7H,MAAOgH,EAAKD,SAASD,IACrBgB,SAAUP,EACVQ,QAASL,EACTM,OAAQL,IAEZ,uBAAOM,QAAQ,WAAW1C,UAAWyB,EAAKD,SAASpI,MAAnD,yBAEJ,qBAAK4G,UAAU,oBAAf,SACKuB,EAAIqB,OAAOpB,iBAIxB,qBAAKxB,UAAU,cAAf,SACI,wBACIA,UAAU,6CACVa,QAASgC,EAFb,iCAOJ,uBACA,qBAAK7C,UAAW,uBAAyBuB,EAAIK,MAAQ,uBAArD,SACKL,EAAII,gBQnFfuB,GAAe1D,aAAQ,kBAAM,SAACpG,GAChC,MAAO,CAACsF,QAAStF,EAAMsF,QAASe,QAASrG,EAAMiE,KAAK5F,SADnC+H,ELxCG,SAAC,GAAkC,IAAjCd,EAAgC,EAAhCA,QAEhB7E,GAFgD,EAAvB4F,QAElB0D,cAA4BtJ,MAErCuJ,EAAS,qBAAKpD,UAAU,WAAf,SACT,qBAAKA,UAAU,oBAmBnB,YAhB8BQ,IAA1B9B,EAAQA,QAAQ7E,KAChBuJ,EAAS1E,EAAQA,QAAQ7E,GAAMwJ,YAAY1D,KAAI,SAAC2D,EAAapJ,GACzD,OACI,+BACI,6BAAa,EAARA,IACL,6BAAKwE,EAAQA,QAAQ7E,GAAMwJ,YAAYnJ,KACvC,6BAAKwE,EAAQA,QAAQ7E,GAAM0J,kBAAkBrJ,KAC7C,6BAAKwE,EAAQA,QAAQ7E,GAAM2J,cAActJ,KACzC,6BAAKwE,EAAQA,QAAQ7E,GAAM4J,gBAAgBvJ,KAC3C,6BAAKwE,EAAQA,QAAQ7E,GAAM6J,gBAAgBxJ,KAC3C,6BAAKwE,EAAQA,QAAQ7E,GAAM8J,kBAAkBzJ,YAOzD,qCACI,8BACI,qBAAK8F,UAAU,cAAf,SACI,sBAAKA,UAAU,UAAf,UACI,mBAAGgB,KAAK,GAAGhB,UAAU,aAArB,kBACA,mBAAGgB,KAAK,UAAUhB,UAAU,aAA5B,qBACA,mBAAGgB,KAAMvJ,GAAO,YAAcoC,EAAMmG,UAAU,aAA9C,SAA4D,gBAAkBnG,WAI1F,kCACI,gCACA,+BACI,uCACA,6CACA,4CACA,4CACA,0CACA,0CACA,iDAIJ,gCACKuJ,aKLfQ,GAAcpE,aAAQ,kBAAM,SAACpG,GAC/B,MAAO,CAACsF,QAAStF,EAAMsF,QAASe,QAASrG,EAAMiE,KAAK5F,SADpC+H,ENtCI,SAAC,GAAmC,IAAlCd,EAAiC,EAAjCA,QAClBgB,GADmD,EAAxBD,QACZnF,OAAOC,QAAQmE,EAAQA,SAASiB,KAAI,SAAC9F,EAAyBK,GAA1B,OACnD,oBAAI2G,QAAS,kBAAMhJ,OAAOC,SAAS2I,QAAQhJ,GAAO,aAAeoC,EAAK,KAAtE,SACQ,sBAAKmG,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKW,IAAKjH,EAASQ,GAAQ0G,IAAK/G,EAAK,GAAImG,UAAU,gBACnD,sBAAMA,UAAU,aAAhB,SAA8BnG,EAAK,QAEvC,qBAAKmG,UAAU,eAAf,SACI,gCACI,kCACA,+BACI,6CACA,oBAAIA,UAAU,sBAAd,SACKvD,KAAKC,MAAgD,KAAzC7C,EAAK,GAAGgK,aAAezF,OAAOC,UAAkB,IAAM,mBAG3E,+BACI,4CACA,oBAAI2B,UAAU,sBAAd,SAAqCnG,EAAK,GAAGiK,mBAAqB,kBAEtE,+BACI,4CACA,oBAAI9D,UAAU,sBAAd,SAAqCnG,EAAK,GAAGkK,eAAiB,UAElE,+BACI,0CACA,oBAAI/D,UAAU,sBAAd,SAAqCnG,EAAK,GAAGmK,iBAAmB,YAEpE,+BACI,0CACA,oBAAIhE,UAAU,sBAAd,SAAqCnG,EAAK,GAAGoK,iBAAmB,UAEpE,+BACI,4CACA,oBAAIjE,UAAU,sBAAd,SAAqCnG,EAAK,GAAGqK,mBAAqB,+BAc9F,OANGxE,IAAW,KACVA,EAAS,qBAAKM,UAAU,WAAf,SACL,qBAAKA,UAAU,qBAKnB,qCACI,8BACI,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,UAAf,UACI,mBAAGgB,KAAK,GAAGhB,UAAU,aAArB,kBACA,mBAAGgB,KAAK,UAAUhB,UAAU,aAA5B,4BAIZ,gCACI,6BACKN,YMnBfyE,GAAY3E,aAAQ,kBAAM,SAACpG,GAC7B,MAAO,CAACiE,KAAMjE,EAAMiE,KAAMoC,QAASrG,EAAMiE,KAAK5F,SAC/C,CACC0B,WAAYA,GAHEqG,ETtDG,SAAC,GAA2C,IAA1CnC,EAAyC,EAAzCA,KAAMlE,EAAmC,EAAnCA,WAAmC,EAAvBsG,QAErC/H,QAAQC,IAAI0F,GAFgD,MAIpCgE,mBAAS,CAC7BnJ,MAAO,CAACqJ,IAAK,GAAInI,MAAO,IAAKoI,SAAU,CAACD,IAAK,GAAInI,MAAO,MALA,mBAIrDqI,EAJqD,KAI/CC,EAJ+C,OAQtCL,mBAAS,CAC3BM,QAAS,GAAIC,MAAO,SAToC,mBAQrDL,EARqD,KAQhDM,EARgD,KAYtDG,EAAgB,SAACC,GACnBP,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,eAGvE+I,EAAe,SAACF,GAClBP,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,eAGvEgJ,EAAc,SAACH,GACU,KAAvBA,EAAMC,OAAOzH,OACbiH,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAMC,OAAOjK,KAAO,CAACsJ,IAAKU,EAAMC,OAAOzH,MAAOrB,MAAO,QAI3EkG,EAAItD,GAAMsB,OAAOD,EAAKzE,gBAe5B,OACI,qCACI,8BACI,qBAAKoH,UAAU,cAAf,SACI,sBAAKA,UAAU,UAAf,UACI,mBAAGgB,KAAK,GAAGhB,UAAU,aAArB,kBACA,mBAAGgB,KAAK,QAAQhB,UAAU,aAA1B,0BAIhB,sBAAKA,UAAU,iBAAf,UACI,sBAAMA,UAAU,UAAhB,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,wBAAb,mBACA,uBACImB,GAAG,QACHlJ,KAAK,QACLqK,KAAK,OACL7H,MAAOgH,EAAKvJ,MAAMqJ,IAClBgB,SAAUP,EACVQ,QAASL,EACTM,OAAQL,IAEZ,uBAAOM,QAAQ,QAAQ1C,UAAW,QAAUyB,EAAKvJ,MAAMkB,MAAvD,sBAEJ,sBAAK4G,UAAU,qBAAf,UACI,mBAAGA,UAAU,wBAAb,wBACA,uBACImB,GAAG,WACHlJ,KAAK,WACLqK,KAAK,WACL7H,MAAOgH,EAAKD,SAASD,IACrBgB,SAAUP,EACVQ,QAASL,EACTM,OAAQL,IAEZ,uBAAOM,QAAQ,WAAW1C,UAAW,WAAayB,EAAKD,SAASpI,MAAhE,8BAIZ,sBAAK4G,UAAU,cAAf,UACI,wBACIA,UAAU,2CACVa,QAzDI,WAChBvB,EAAE/B,KAAK,cAAe,CAACrF,MAAOuJ,EAAKvJ,MAAMqJ,IAAKC,SAAUC,EAAKD,SAASD,MACjE/D,MAAK,SAACC,GACHtE,EAAW,CAACjB,MAAOuF,EAAIC,KAAKxF,MAAOD,KAAMwF,EAAIC,KAAK4D,SAC9CnJ,MAAOsF,EAAIC,KAAKvF,QACpB0J,EAAO,CAACF,QAAS,YAAclE,EAAIC,KAAK4D,SAAW,IAAKM,MAAO,UAC/D/J,OAAOC,SAAS2I,QAAQ,YAE3BnC,OAAM,SAACC,GAAD,OAAcsD,EACjB,CAACF,QAAUpD,EAAI8D,SAAS3E,KAAQa,EAAI8D,SAAS3E,KAAKiE,QAAUpD,EAAIb,KAAKiE,QAASC,MAAO,YA8CrF,mBAMA,mBACI5B,UAAU,6CACVgB,KAAK,WAFT,kCAOJ,qBAAKhB,UAAW,qBAAuBuB,EAAIK,MAAQ,uBAAnD,SACKL,EAAII,mBSrCfyC,GAAc5E,aAAQ,kBAAM,SAACpG,GAC/B,MAAO,CAACiE,KAAMjE,EAAMiE,KAAMgH,SAAUjL,EAAMsF,QAAS4F,YAC/ClL,EAAM+E,WAAYsB,QAASrG,EAAMiE,KAAK5F,SAC3C,CACC8M,WVmEsB,SAAC1K,GAAD,8CAAkB,WAAOqD,EAAeC,GAAtB,SAAAmC,EAAA,sDACxCpC,EAAS7B,EAAQxB,IACjB2E,GAAQtB,EAAUC,GAFsB,2CAAlB,yDUlEtBqH,WVuEsB,SAACvC,GAAD,8CAAgB,WAAO/E,EAAeC,GAAtB,SAAAmC,EAAA,sDAElC,wBAAwBmF,KAAKxC,EAAMC,OAAOzH,SACe,QAArD2D,OAAOsG,WAAWzC,EAAMC,OAAOzH,OAAO2F,WACX,MAAvB6B,EAAMC,OAAOzH,OACbyC,EAAS5B,EAAQ,CAACR,KAAM,KAAMC,MAAO,aACrCyD,GAAQtB,EAAUC,IACY,MAAvB8E,EAAMC,OAAOzH,OACpByC,EAAS5B,EAAQ,CAACR,KAAM,KAAMC,MAAO,cACrCyD,GAAQtB,EAAUC,IACY,KAAvB8E,EAAMC,OAAOzH,OACpByC,EAAS5B,EAAQ,CAACR,KAAM,IAAKC,MAAO,cACpCyD,GAAQtB,EAAUC,KAElBD,EAAS5B,EAAQ,CAACR,KAAMmH,EAAMC,OAAOzH,MAAOM,MAAO,kBACnDyD,GAAQtB,EAAUC,KAGtBzF,QAAQC,IAAIsK,EAAMC,OAAOzH,OACrB2D,OAAOsG,WAAWzC,EAAMC,OAAOzH,OAAS,GACxCyC,EAAS5B,EAAQ,CAACR,KAAMmH,EAAMC,OAAOzH,MAAOM,MAAO,aACnDyD,GAAQtB,EAAUC,KAElBD,EAAS5B,EAAQ,CAACR,KAAMmH,EAAMC,OAAOzH,MAAOM,MAAO,cACnDyD,GAAQtB,EAAUC,MAxBQ,2CAAhB,yDUtEtBwH,WVoGsB,yDAAM,WAAOzH,EAAeC,GAAtB,SAAAmC,EAAA,sDAC5BpC,EAAS3B,GAAS4B,IAAWgB,WAAWrE,KAAKkB,OAC7CwD,GAAQtB,EAAUC,GAFU,2CAAN,yDUnGtByH,eVwG0B,SAAC3C,GAAD,8CAAgB,WAAO/E,EAAeC,GAAtB,SAAAmC,EAAA,sDACtC,gBAAgBmF,KAAKxC,EAAMC,OAAOzH,QAClCyC,EAASzB,EAAYwG,EAAMC,OAAOzH,QAEtC+D,GAAQtB,EAAUC,GAJwB,2CAAhB,yDUvG1B0H,yBV8GoC,yDAAM,WAAO3H,EAAeC,GAAtB,SAAAmC,EAAA,sDAC1CpC,EAASxB,GAAuByB,IAAWgB,WAAWrE,KAAKqB,qBAC3DqD,GAAQtB,EAAUC,GAFwB,2CAAN,0DUtHpBqC,ED1CG,SAAC,GAUN,IATUnC,EASX,EATWA,KACAgH,EAQX,EARWA,SACAC,EAOX,EAPWA,YACAC,EAMX,EANWA,WACAC,EAKX,EALWA,WACAG,EAIX,EAJWA,WACAC,EAGX,EAHWA,eACAC,EAEX,EAFWA,yBAIlBhL,GAFO,EADW4F,QAGX6E,EAAYxK,KAAKD,MACxBiB,EAAOwJ,EAAYxK,KAAKgB,KACxBE,EAAOsJ,EAAYxK,KAAKkB,KAExB8J,EAAU9I,GAAMsB,OAAOD,EAAKzE,gBAC5BuF,EAAamG,EAAYzJ,MAAMhB,GAG/BoB,EAAWqJ,EAAYxK,KAAKmB,SAE5BE,EAAqBmJ,EAAYxK,KAAKqB,mBACtCD,EAAWoJ,EAAYxK,KAAKoB,SAE9BwE,EAAc,qBAAKM,UAAU,WAAf,SACd,qBAAKA,UAAU,yBAGKQ,IAArB6D,EAAS3F,UACRgB,EAASpF,OAAOC,QAAQ8J,EAAS3F,SAASiB,KAAI,SAAC9F,EAAyBK,GACpE,OACI,oBAAI2G,QAAS,WACT0D,EAAW1K,EAAK,KADpB,SAGI,qBAAKmG,UAAU,OAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cACXW,IAAKjH,EAASQ,GAAQ0G,IAAK/G,EAAK,KACpC,sBAAMmG,UAAU,aAAhB,SAA8BnG,EAAK,gBAQ3D,IAAIkL,EAAa,qBAAK/E,UAAU,WAAf,SACb,qBAAKA,UAAU,yBAGAQ,IAAfrC,IACA4G,EAAQ5G,EAAWrD,KAAK6E,KAAI,SAACqF,EAAWhH,GAAZ,OACxB,+BACI,6BAAKvB,KAAKC,MAA6B,KAAtBsI,EAAI5G,OAAOC,UAAkB,IAAM,WACpD,oBAAI2B,UAAU,cAAd,SAA6BvD,KAAKC,MAA8C,KAAvCyB,EAAWvC,KAAKoC,GAAKI,OAAOC,UAAmB,GAAK,OAC7F,oBAAI2B,UAAU,aAAd,SAA4BvD,KAAKC,MAA+C,KAAxCyB,EAAWtC,MAAMmC,GAAKI,OAAOC,UAAmB,GAAK,cAKzG,IAAM1F,EAAU0E,EAAK1E,QAgBjBsM,EAAY,qCACZ,oBAAIjF,UAAU,0BAAd,SACKnG,IAEL,qBAAKmG,UAAU,WAAf,SACI,qBAAKA,UAAU,uBAuIvB,MAnIY,KAATnG,IACCoL,EAAO,qCACH,oBAAIjF,UAAU,0BAAd,SACKnG,IAEL,sBAAKmG,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,gCACI,kCACA,+BACI,6CACA,oBAAIA,UAAU,aAAd,SAA4BvD,KAAKC,MAA+D,KAAxD2H,EAAS3F,QAAQ7E,GAAMgK,aAAezF,OAAOC,UAAkB,IAAM,cAEjH,+BACI,4CACA,oBAAI2B,UAAU,aAAd,SAA4BqE,EAAS3F,QAAQ7E,GAAMiK,mBAAqB,kBAE5E,+BACI,4CACA,oBAAI9D,UAAU,aAAd,SAA4BqE,EAAS3F,QAAQ7E,GAAMkK,eAAiB,UAExE,+BACI,0CACA,oBAAI/D,UAAU,aAAd,SAA4BqE,EAAS3F,QAAQ7E,GAAMmK,iBAAmB,YAE1E,+BACI,0CACA,oBAAIhE,UAAU,aAAd,SAA4BqE,EAAS3F,QAAQ7E,GAAMoK,iBAAmB,UAE1E,+BACI,4CACA,oBAAIjE,UAAU,aAAd,SAA4BqE,EAAS3F,QAAQ7E,GAAMqK,mBAAqB,sBAKpF,qBAAKlE,UAAU,SAAf,SACI,kCACI,gCACA,+BACI,6CACA,oBAAIA,UAAU,cAAd,wBACA,oBAAIA,UAAU,aAAd,iCAGJ,gCACK+E,SAIb,sBAAK/E,UAAU,SAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,mBAAGA,UAAU,wBAAb,SAAsClF,EAAKC,QAC3C,uBACIoG,GAAG,OACHlJ,KAAK,OACLqK,KAAK,OACL7H,MAAOK,EAAKA,KACZyH,SAAQ,uCAAE,WAAON,GAAP,SAAA3C,EAAA,sDACNkF,EAAWvC,GADL,2CAAF,sDAGRO,QAAS,SAAAP,GAAK,OAAIA,EAAMC,OAAOgD,YAEnC,uBAAOxC,QAAQ,OAAO1C,UAAU,mDAAhC,sCAMR,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,mBAAGA,UAAU,wBAAb,0BACA,uBACImB,GAAG,WACHlJ,KAAK,WACLqK,KAAK,OACL7H,MAAOS,EACPqH,SAAU,SAACN,GACP2C,EAAe3C,IAEnBO,QAAS,SAAAP,GAAK,OAAIA,EAAMC,OAAOgD,YAEnC,uBAAOxC,QAAQ,WAAW1C,UAAU,gDAApC,sBAGA,wBAAOA,UAAU,aAAjB,UACI,uBAAOsC,KAAK,WAAWtC,UAAU,YAAYmF,QAASnK,EAClDuH,SAAW,WACPoC,OAER,sBAAM3E,UAAU,0BAAhB,oDAIZ,qBAAKA,UAAU,wBAAf,SACI,oBAAGA,UAAU,yDAAb,UAAsE,sBAAMA,UAAU,QAAhB,SACjEvD,KAAKC,MAAmC,KAA5B/D,EAAUyF,OAAOC,UAAkB,IAAM,SAD1D,kBAKR,sBAAK2B,UAAU,SAAf,UACI,qBAAKA,UAAU,aAAf,SACI,oBAAGA,UAAU,yDAAb,UAAsE,sBAAMA,UAAU,QAAhB,SACjE/E,IADL,YAIJ,qBAAK+E,UAAU,wBAAf,SACI,oBAAGA,UAAU,yDAAb,UAAsE,sBAAMA,UAAU,QAAhB,SACO,GAAxEvD,KAAKC,MAAM0B,OAAOsG,WAAWzJ,GAAYmD,OAAOsG,WAAWxJ,IAAkB,GAAK,IAAM,SAD7F,cAIJ,qBAAK8E,UAAU,qBAAf,SACI,kCACI,uBAAOsC,KAAK,WAAWtC,UAAU,YAAYmF,QAAShK,EAC/CoH,SAAU,WACNsC,OAEX,sBAAM7E,UAAU,0BAAhB,kDAGR,qBAAKA,UAAU,cACfa,QAjJE,WACdiE,EAAQvH,KAAK,kBAAmB,CAC5B1D,KAAMA,EACNwG,SAAU,KACVvF,KAAMsD,OAAOsG,WAAW5J,EAAKA,MAC7BE,KAAMA,EACNE,SAAUkD,OAAOsG,WAAWxJ,GAC5B0D,OAAQzD,IAEPqC,MAAK,WACFsB,GAAM5B,SAASmC,UAsIX,2BAUT,sBAAKW,UAAU,iBAAf,UACH,8BACI,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,UAAf,UACI,mBAAGgB,KAAK,GAAGhB,UAAU,aAArB,kBACA,mBAAGgB,KAAK,UAAUhB,UAAU,aAA5B,4BAIZ,gCACI,6BACKN,MAGRuF,QC/IMG,GAlCH,WAEV,OACI,eAAC,IAAD,CAAQC,SAAUC,aAAY,SAAClM,GAAD,OAAkBA,EAAMiE,KAAK5F,QAA3D,UACE,cAACwJ,GAAD,IACA,qBAAKjB,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIuF,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACJ,8BACI,qBAAKzF,UAAU,cAAf,SACI,qBAAKA,UAAU,UAAf,SACI,mBAAGA,UAAU,aAAb,2BAMpB,cAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,SAASE,UAAYvB,KACvC,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,YAAYE,UAAY/C,KAC1C,cAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,SAASE,UAAYtE,KACvC,cAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,WAAWE,UAAY9B,KACzC,cAAC,IAAD,CAAO4B,KAAK,kBAAkBE,UAAYxC,KAC1C,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,WAAWE,UAAYtB,KACzC,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,aAAaE,UAAYnG,KAC3C,cAAC,IAAD,CAAUoG,GAAG,eE5FTC,QACW,cAA7B/N,OAAOC,SAAS+N,UAEe,UAA7BhO,OAAOC,SAAS+N,UAEhBhO,OAAOC,SAAS+N,SAASC,MACvB,2DChBN,IAAM9J,GAAQC,EAAQ,IAASC,QAEzBC,GAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAGhDa,GAAM,SAACC,EAAeC,GACK,KAAzBA,IAAWE,KAAKpF,MACpB+D,GAAMsB,OAAOH,IAAWE,KAAKzE,gBAAgB2E,KAAK,qBAC7CC,MAAK,SAACC,GACHP,EAAS7C,EAAYoD,EAAIC,KAAKC,WAEjCW,OAAM,SAACC,GAAD,OAAc7G,QAAQC,IAAI4G,OCXnCvC,GAAQC,EAAQ,IAASC,QAEzBC,GAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAGhDa,GAAM,SAACC,EAAeC,GACK,KAAzBA,IAAWE,KAAKpF,MAChB+D,GAAMsB,OAAOH,IAAWE,KAAKzE,gBAAgB2E,KAAK,mBAC7CC,MAAK,SAACC,GACHP,EAAS2B,GAAepB,EAAIC,OACY,KAApCP,IAAWgB,WAAWrE,KAAKD,Md0GrB,SAACqD,EAAeC,GACtC,IAAMtD,EAAOS,OAAOyL,KAAK5I,IAAWuB,QAAQA,SAAS,GACrDhH,QAAQC,IAAI,OAASkC,GACrBoD,GAAIC,EAAUC,EAAUtD,Gc5GRmM,CAAW9I,EAAUC,OCAnC8I,GAAW3N,SAAS4N,KACpBC,G,4JACF,WACI,OAAOC,IAASC,aAAaC,KAAKC,MAAMC,SAAUP,Q,GAFvCQ,IAAMC,WAMZC,GAAUC,YAAqB,CACxCvB,SAAUwB,QAGd/H,GAAM5B,SDEuB,uCAAM,WAAOA,EAAeC,GAAtB,SAAAmC,EAAA,sDAC/B5H,QAAQC,IAAI,mBACZsF,GAAIC,EAAUC,GACdzF,QAAQC,IAAI,mBAHmB,2CAAN,yDCDxB6F,MAAK,WACF,OAAOsB,GAAM5B,SFHM,uCAAM,WAAOA,EAAeC,GAAtB,SAAAmC,EAAA,6DAC7BrC,GAAIC,EAAUC,GADe,kBAEtBd,QAAQC,WAFc,2CAAN,4DEKtBkB,MAAK,WACF,OAAOsB,GAAM5B,SAASmC,SAEzB7B,MAAK,WACFsB,GAAM5B,SDbsB,uCAAM,WAAOA,EAAeC,GAAtB,SAAAmC,EAAA,sEAE5BnD,GAAM,KAFsB,OAGlCc,GAAIC,EAAUC,GAHoB,0DAAN,yDCc5B2B,GAAM5B,Sf8EmB,uCAAM,WAAOA,EAAeC,GAAtB,SAAAmC,EAAA,sEAEzBnD,GAAM,KAFmB,OAG/Bc,GAAIC,EAAUC,GAHiB,0DAAN,yDe7EzB2B,GAAM5B,SPnBsB,uCAAM,WAAOA,EAAeC,GAAtB,SAAAmC,EAAA,sEAE5BnD,GAAM,KAFsB,OAGlCc,GAAIC,EAAUC,GAHoB,0DAAN,yDOoB5B2B,GAAM5B,SFnBoB,uCAAM,WAAOA,EAAeC,GAAtB,SAAAmC,EAAA,sEAE1BnD,GAAM,KAFoB,OAGhCc,GAAIC,EAAUC,GAHkB,0DAAN,yDEqB1B,IAAI1F,EAAO,GAEPC,QAAQC,IAAI,YAEZF,EAAO,kBAAkBG,KAAKC,OAAOC,SAASC,UAAU,GAG5DqO,IAASX,OACL,eAAC,IAAMqB,WAAP,WACI,eAAC,GAAD,WACI,sBAAM9F,KAAK,0DAA0D+F,IAAI,eACzE,sBAAM9O,KAAK,WAAW+O,QAAQ,0CAC9B,4CACA,sBAAMhG,KAAMvJ,EAAO,SAEvB,cAAC,IAAD,CAAUqH,MAAOA,GAAjB,SACI,cAAC,GAAD,SAGRxG,SAAS2O,eAAe,SH8E9B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5J,MAAK,SAAA6J,GACJA,EAAaC,gBAEdhJ,OAAM,SAAAiJ,GACL7P,QAAQ6P,MAAMA,EAAM5F,eGhFvBrD,OAAM,SAACC,GACJ7G,QAAQC,IAAI4G,Q","file":"static/js/main.7ea159b8.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    console.log('NODE_ENV')\r\n    // @ts-ignore\r\n    base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n}\r\n\r\nexport const Navbar = ({auth}: any): any => {\r\n    const user = auth.name\r\n    if (user === '') return (\r\n        <nav>\r\n            <div className='nav-wrapper'>\r\n                <a href={base} className='brand-logo'>Forecast Trading</a>\r\n                <ul id='nav-mobile' className='right hide-on-med-and-down'>\r\n                    <li><a href={base + '/login'}>Hello, Guest!</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n    return (\r\n        <nav>\r\n            <div className='nav-wrapper'>\r\n                <a href={base} className='brand-logo'>Forecast Trading</a>\r\n                <ul id='nav-mobile' className='right hide-on-med-and-down'>\r\n                    <li><a href={base + '/weather'}>Weather</a></li>\r\n                    <li><a href={base + '/statistic'}>Statistic</a></li>\r\n                    <li><a href={base + '/futures'}>Futures</a></li>\r\n                    <li><a href={base + '/about'}>Hello, {user}!</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\n\r\nexport interface Session {\r\n    name: string\r\n    email: string\r\n    request_params: any\r\n    balance: number\r\n    base: string\r\n}\r\n\r\nexport interface User {\r\n    name: string\r\n    email: string\r\n    token: string\r\n}\r\n\r\nlet es: User = { name: '', email: '', token: '' }\r\n\r\ntry {\r\n    es = JSON.parse(document.cookie)\r\n}\r\ncatch (e) {\r\n    document.cookie = JSON.stringify(es)\r\n}\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    // @ts-ignore\r\n    base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n}\r\n\r\nconst initialState: Session = {\r\n    name: es.name,\r\n    email: es.email,\r\n    balance: 0,\r\n    base: base,\r\n    request_params: {\r\n        // @ts-ignore\r\n        baseURL: base + '/api',\r\n        timeout: 30000,\r\n        headers: { 'Content-Type': 'application/json', 'Authorization': es.token }\r\n    }\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setSession(state, action: PayloadAction<User>) {\r\n            const { name, email, token } = action.payload\r\n            const es = { name: name, email: email, token: 'Bearer ' + token }\r\n            document.cookie = JSON.stringify(es)\r\n            state.name = name\r\n            state.email = email\r\n            state.request_params = {\r\n                baseURL: \"/wf/api\",\r\n                timeout: 30000,\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': es.token }\r\n            }\r\n        },\r\n        rename(state, action: PayloadAction<string>) {\r\n            const es = JSON.parse(document.cookie)\r\n            es.name = action.payload\r\n            document.cookie = JSON.stringify(es)\r\n            state.name = action.payload\r\n        },\r\n        updBalance(state, action: PayloadAction<{ balance: number }>) {\r\n            const {balance} = action.payload\r\n            state.balance = balance\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setSession, rename, updBalance } = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","export default __webpack_public_path__ + \"static/media/HongKong.2db06be5.jpg\";","export default __webpack_public_path__ + \"static/media/San Francisco.56cbe460.jpg\";","import hk from '../HongKong.jpg'\r\nimport friscoimg from '../San Francisco.jpg'\r\nimport nyimg from '../NewYork.jpg'\r\nimport parisimg from '../Paris.jpg'\r\n\r\nexport const city_img = [hk, nyimg, friscoimg, parisimg]\r\n","export default __webpack_public_path__ + \"static/media/NewYork.654f4089.jpg\";","export default __webpack_public_path__ + \"static/media/Paris.1275a43d.jpg\";","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nimport {city_img} from '../../components/Images'\r\n\r\nexport interface StatDetail {\r\n    paid: string\r\n    completed: boolean\r\n    quantity: 1\r\n    email: string\r\n    duration: number\r\n    duration_left: number\r\n    city: string\r\n    type: string\r\n    hidden: boolean\r\n    temp: number\r\n    temp_reach: boolean\r\n    _id: any\r\n    __v: number\r\n}\r\n\r\nexport interface CurrentStat {\r\n    [index: string]: StatDetail[]\r\n}\r\n\r\nexport interface PageStat {\r\n    index: number\r\n    active: string[]\r\n}\r\n\r\nexport interface Stat {\r\n    city: CurrentStat\r\n    page: PageStat[]\r\n}\r\n\r\nconst initialState: Stat = {\r\n    city: {},\r\n    page: (new Array(city_img.length)).fill({index: 0, active: ['green lighten-4', '', '']})\r\n}\r\n\r\nexport const statsSlice = createSlice({\r\n    name: 'stats',\r\n    initialState,\r\n    reducers: {\r\n        update_stat(state: Stat, action: PayloadAction<CurrentStat>) {\r\n            for (const [key, value] of Object.entries(action.payload)) {\r\n                state.city[key] = value\r\n            }\r\n        },\r\n        page_city_push(state: Stat, action: PayloadAction<PageStat>) {\r\n            state.page.push(action.payload)\r\n        },\r\n        page_city_change(state: Stat, action: PayloadAction<{index: number, payload: PageStat}>) {\r\n            state.page[action.payload.index] = action.payload.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { update_stat, page_city_push, page_city_change } = statsSlice.actions\r\n\r\nexport default statsSlice.reducer\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nexport interface DailyRate {\r\n    [index: string]: {\r\n        temp: number[],\r\n        rate: number[],\r\n        rate2: number[],\r\n        expected_value: number,\r\n        standard_deviation: number\r\n    }\r\n}\r\n\r\ninterface Page {\r\n    city: string\r\n    temp: {\r\n        temp: string\r\n        image: string\r\n    }\r\n    rich: boolean\r\n    tempRate: string\r\n    quantity: string\r\n    private_derivative: boolean\r\n}\r\n\r\nexport interface Derivative {\r\n    daily: DailyRate\r\n    page: Page\r\n}\r\n\r\nconst initialState: Derivative = {\r\n    daily: {},\r\n    page: {\r\n        city: '',\r\n        temp: {\r\n            temp: '0',\r\n            image: 'wb_sunny'\r\n        },\r\n        rich: true,\r\n        tempRate: '0 USD',\r\n        quantity: '1',\r\n        private_derivative: true\r\n    }\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'derivative',\r\n    initialState,\r\n    reducers: {\r\n        init_page(state: Derivative, action: PayloadAction<Page>) {\r\n            state.page = action.payload\r\n        },\r\n        setCity(state: Derivative, action: PayloadAction<string>) {\r\n            state.page.city = action.payload\r\n        },\r\n        setTemp(state: Derivative, action: PayloadAction<{temp: string, image: string}>) {\r\n            state.page.temp = action.payload\r\n        },\r\n        setRich(state: Derivative, action: PayloadAction<boolean>) {\r\n            state.page.rich = action.payload\r\n        },\r\n        setTempRate(state: Derivative, action: PayloadAction<string>) {\r\n            state.page.tempRate = action.payload\r\n        },\r\n        setQuantity(state: Derivative, action: PayloadAction<string>) {\r\n            state.page.quantity = action.payload\r\n        },\r\n        setPrivate_derivative(state: Derivative, action: PayloadAction<boolean>) {\r\n            state.page.private_derivative = action.payload\r\n        },\r\n        update_rate(state: Derivative, action: PayloadAction<{\r\n            city: string,\r\n            rate: number[],\r\n            rate2: number[],\r\n            temp: number[],\r\n            expected_value: number,\r\n            standard_deviation: number\r\n        }>) {\r\n            if(!(action.payload.city in state.daily)) {\r\n                state.daily[action.payload.city] = {temp: [], rate: [], rate2: [],\r\n                expected_value: 0, standard_deviation: 0}\r\n            }\r\n\r\n            state.daily[action.payload.city] = {\r\n                temp: action.payload.temp,\r\n                rate: action.payload.rate,\r\n                rate2: action.payload.rate2,\r\n                standard_deviation: action.payload.standard_deviation,\r\n                expected_value: action.payload.expected_value\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    update_rate,\r\n    init_page,\r\n    setCity,\r\n    setTemp,\r\n    setRich,\r\n    setTempRate,\r\n    setQuantity,\r\n    setPrivate_derivative\r\n} = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","import {update_rate, init_page, setCity, setTemp, setTempRate, setRich,\r\n    setQuantity, setPrivate_derivative} from './derivativeSlice'\r\n\r\nconst axios = require('axios').default\r\n\r\nconst sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst normalcdf = (X: number) => {\r\n    const T = 1 / (1 + 0.2316419 * Math.abs(X))\r\n    const D = 0.3989423 * Math.exp(-X * X / 2)\r\n    let Prob = D * T * (0.3193815 + T * (-0.3565638 + T * (1.781478 + T * (-1.821256 + T * 1.330274))))\r\n    if (X > 0) {\r\n        Prob = 1 - Prob\r\n    }\r\n    return Prob\r\n}\r\n\r\nconst rate =  (standard_deviation: number,\r\n               expected_value: number,\r\n               temp: number,\r\n               rich: boolean) => {\r\n\r\n    let Phi: number\r\n\r\n    if(standard_deviation === 0) {\r\n        if (temp < expected_value) {\r\n            Phi = 0\r\n        } else {\r\n            Phi = 1\r\n        }\r\n    } else {\r\n        Phi = Math.round(100000 * normalcdf((temp - expected_value) /\r\n            standard_deviation)) / 100000\r\n        if(rich) {\r\n            Phi = 1 - Phi\r\n        }\r\n    }\r\n\r\n    return 1.05 * Phi\r\n}\r\n\r\nconst upd = (dispatch: any, getState: any, init_city?: string) => {\r\n    console.log('upd')\r\n    if(getState().auth.name !== '') {\r\n        axios.create(getState().auth.request_params).post('/derivative/daily_params')\r\n            .then((res: any) => {\r\n                res.data.stats.forEach((city: any) => {\r\n                    let temp: number[]\r\n                    let di: number[]\r\n                    let step = 2\r\n                    const l = 2\r\n\r\n                    do {\r\n                        temp = []\r\n                        di = []\r\n\r\n                        for (let t = 0; t < 2 * l + 1; t++) {\r\n                            temp.push(city.expected_value - (l - t) * step)\r\n                        }\r\n\r\n                        for (const t of temp) {\r\n                            const i = rate(\r\n                                city.standard_deviation,\r\n                                city.expected_value,\r\n                                t,\r\n                                true)\r\n                            di.push(i)\r\n                        }\r\n\r\n                        step = step / 2\r\n                    } while (Math.max(...di) > 1)\r\n\r\n                    let di2 = []\r\n\r\n                    for (const i of di) {\r\n                        di2.push(1 - i)\r\n                    }\r\n\r\n                    dispatch(update_rate({\r\n                        city: city.name,\r\n                        rate: di,\r\n                        rate2: di2,\r\n                        temp: temp,\r\n                        expected_value: city.expected_value,\r\n                        standard_deviation: city.standard_deviation\r\n                    }))\r\n                })\r\n                if (init_city) {\r\n                    console.log(init_city)\r\n                    dispatch(init_page({\r\n                        city: init_city,\r\n                        temp: {\r\n                            temp: '0',\r\n                            image: 'wb_sunny'\r\n                        },\r\n                        quantity: '1',\r\n                        tempRate: Math.round((rate(\r\n                            getState().derivative.daily[init_city].standard_deviation,\r\n                            getState().derivative.daily[init_city].expected_value,\r\n                            0,\r\n                            true\r\n                        ) + Number.EPSILON) * 10000) / 100 + ' %',\r\n                        private_derivative: true,\r\n                        rich: true\r\n                    }))\r\n                }\r\n            })\r\n            .catch((err: any) => console.log(err))\r\n    }\r\n}\r\n\r\nexport const regularUpdateRate = () => async (dispatch: any, getState: any) => {\r\n    while(true) {\r\n        await sleep(10000)\r\n        upd(dispatch, getState)\r\n    }\r\n}\r\n\r\nexport const updateRate = (dispatch: any, getState: any) => {\r\n    const city = Object.keys(getState().weather.weather)[0]\r\n    console.log('try ' + city)\r\n    upd(dispatch, getState, city)\r\n}\r\n\r\nconst askRate = (dispatch: any, getState: any) => {\r\n    const city = getState().derivative.page.city\r\n    const lvl = rate(getState().derivative.daily[city].standard_deviation,\r\n        getState().derivative.daily[city].expected_value,\r\n        getState().derivative.page.temp.temp,\r\n        getState().derivative.page.rich)\r\n    console.log(lvl)\r\n    dispatch(setTempRate(Math.round((lvl + Number.EPSILON) * 10000) / 100 + ' %'))\r\n}\r\n\r\nexport const changeCity = (city: string) => async (dispatch: any, getState: any) => {\r\n    dispatch(setCity(city))\r\n    askRate(dispatch, getState)\r\n}\r\n\r\nexport const changeTemp = (event: any) => async (dispatch: any, getState: any) => {\r\n\r\n    if (/^(-?[0-9]*\\.?[0-9]*)$/.test(event.target.value)) {\r\n        if (Number.parseFloat(event.target.value).toString() === 'NaN') {\r\n            if (event.target.value === '-') {\r\n                dispatch(setTemp({temp: '-0', image: 'ac_unit'}))\r\n                askRate(dispatch, getState)\r\n            } else if (event.target.value === '.') {\r\n                dispatch(setTemp({temp: '0.', image: 'wb_sunny'}))\r\n                askRate(dispatch, getState)\r\n            } else if (event.target.value === '') {\r\n                dispatch(setTemp({temp: '0', image: 'wb_sunny'}))\r\n                askRate(dispatch, getState)\r\n            } else {\r\n                dispatch(setTemp({temp: event.target.value, image: 'border_color'}))\r\n                askRate(dispatch, getState)\r\n            }\r\n        } else {\r\n            console.log(event.target.value)\r\n            if (Number.parseFloat(event.target.value) < 0) {\r\n                dispatch(setTemp({temp: event.target.value, image: 'ac_unit'}))\r\n                askRate(dispatch, getState)\r\n            } else {\r\n                dispatch(setTemp({temp: event.target.value, image: 'wb_sunny'}))\r\n                askRate(dispatch, getState)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeRich = () => async (dispatch: any, getState: any) => {\r\n    dispatch(setRich(!getState().derivative.page.rich))\r\n    askRate(dispatch, getState)\r\n}\r\n\r\nexport const changeQuantity = (event: any) => async (dispatch: any, getState: any) => {\r\n    if (/^[1-9][0-9]*$/.test(event.target.value)) {\r\n        dispatch(setQuantity(event.target.value))\r\n    }\r\n    askRate(dispatch, getState)\r\n}\r\n\r\nexport const changePrivate_derivative = () => async (dispatch: any, getState: any) => {\r\n    dispatch(setPrivate_derivative(!getState().derivative.page.private_derivative))\r\n    askRate(dispatch, getState)\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nconst axios = require('axios').default\r\n\r\nexport const Login = ({auth, setSession, baseUrl}: any): any => {\r\n\r\n    console.log(auth)\r\n\r\n    const [form, setForm] = useState({\r\n        email: {msg: '', state: ''}, password: {msg: '', state: ''}\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        message: '', color: 'gray'\r\n    })\r\n\r\n    const changeHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ' active'}})\r\n    }\r\n\r\n    const focusHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ' active'}})\r\n    }\r\n\r\n    const blurHandler = (event: any) => {\r\n        if (event.target.value === '') {\r\n            setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ''}})\r\n        }\r\n    }\r\n\r\n    const a = axios.create(auth.request_params)\r\n\r\n    const handleLogin = () => {\r\n        a.post('/auth/login', {email: form.email.msg, password: form.password.msg})\r\n            .then((res: any) => {\r\n                setSession({email: res.data.email, name: res.data.username,\r\n                    token: res.data.token})\r\n                setMsg({message: 'Welcome, ' + res.data.username + '!', color: 'green'})\r\n                window.location.replace('about')\r\n            })\r\n            .catch((err: any) => setMsg(\r\n                {message: (err.response.data) ? err.response.data.message : err.data.message, color: 'red'}\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <a href=\"\" className=\"breadcrumb\">Home</a>\r\n                        <a href=\"login\" className=\"breadcrumb\">Login</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        <div className='row login_cont'>\r\n            <form className='col s12'>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>email</i>\r\n                        <input\r\n                            id='email'\r\n                            name='email'\r\n                            type='text'\r\n                            value={form.email.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='email' className={'email' + form.email.state}>Email</label>\r\n                    </div>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>more_horiz</i>\r\n                        <input\r\n                            id='password'\r\n                            name='password'\r\n                            type='password'\r\n                            value={form.password.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='password' className={'password' + form.password.state}>Password</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn login_btn green lighten-2 black-text'\r\n                    onClick={handleLogin}\r\n                >\r\n                    Login\r\n                </button>\r\n                <a\r\n                    className='btn register_btn grey lighten-1 black-text'\r\n                    href='register'\r\n                >\r\n                    Register new User\r\n                </a>\r\n            </div>\r\n            <div className={'alert login_alert ' + msg.color + '-text text-lighten-1'}>\r\n                {msg.message}\r\n            </div>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nconst axios = require('axios').default\r\n\r\nexport const AddUser = ({auth, baseUrl}: any): any => {\r\n\r\n    const [form, setForm] = useState({\r\n        email: {msg: '', state: 'adduser_label'}, password: {msg: '', state: 'adduser_label'},\r\n        username: {msg: '', state: 'adduser_label'}\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        message: '', color: 'gray', errors: {'email': '', 'password': '', 'username': ''}\r\n    })\r\n\r\n    const changeHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: 'adduser_label active'}})\r\n    }\r\n\r\n    const focusHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: 'adduser_label active'}})\r\n    }\r\n\r\n    const blurHandler = (event: any) => {\r\n        if (event.target.value === '') {\r\n            setForm({ ...form, [event.target.name]: {msg: event.target.value, state: 'adduser_label'}})\r\n        }\r\n    }\r\n\r\n    const a = axios.create(auth.request_params)\r\n\r\n    const handleRegister = async() => {\r\n        const parseErrors = (err: any) => {\r\n            const record = {'email': '', 'password': '', 'username': ''}\r\n            const email = err.find((e: any) => e.param === 'email')\r\n            if (email) record.email = email.msg\r\n            const username = err.find((e: any) => e.param === 'username')\r\n            if (username) record.username = username.msg\r\n            const password = err.find((e: any) => e.param === 'password')\r\n            if (password) record.password = password.msg\r\n            return record\r\n        }\r\n        a.post('/auth/register', {email: form.email.msg, username: form.username.msg,\r\n            password: form.password.msg})\r\n            .then((res: any) => {\r\n                setMsg(\r\n                    {message: res.data.message, color: 'green',\r\n                        errors: {'email': '', 'password': '', 'username': ''}}\r\n                )\r\n                window.location.replace('login')\r\n            })\r\n            .catch((err: any) => setMsg(\r\n                {message: (err.response.data != null) ? err.response.data.message : err.data.message, color: 'red',\r\n                    errors: (!!err.response && !!err.response.data.errors) ? parseErrors(err.response.data.errors) :\r\n                        {'email': '', 'password': '', 'username': ''}}\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <a href=\"\" className=\"breadcrumb\">Home</a>\r\n                        <a href=\"register\" className=\"breadcrumb\">Register</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <form action='../.html' className='col autocomplete-content s12'>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>email</i>\r\n                        <input\r\n                            id='email'\r\n                            name='email'\r\n                            type='text'\r\n                            value={form.email.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='email' className={form.email.state}>Email</label>\r\n                    </div>\r\n                    <div className='row adduser_error'>\r\n                        {msg.errors.email}\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>border_color</i>\r\n                        <input\r\n                            id='username'\r\n                            name='username'\r\n                            type='text'\r\n                            value={form.username.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='username' className={form.username.state}>User name</label>\r\n                    </div>\r\n                    <div className='row adduser_error'>\r\n                        {msg.errors.username}\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>more_horiz</i>\r\n                        <input\r\n                            id='password'\r\n                            name='password'\r\n                            type='password'\r\n                            value={form.password.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='password' className={form.password.state}>Password</label>\r\n                    </div>\r\n                    <div className='row adduser_error'>\r\n                        {msg.errors.password}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn adduser_btn green lighten-2 black-text'\r\n                    onClick={handleRegister}\r\n                >\r\n                    Register new User\r\n                </button>\r\n            </div>\r\n            <br/>\r\n            <div className={'alert adduser_alert ' + msg.color + '-text text-lighten-1'}>\r\n                {msg.message}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nconst axios = require('axios').default\r\n\r\nexport const About = ({auth, rename, setSession, baseUrl, updateBalance}: any): any => {\r\n\r\n    const [form, setForm] = useState(\r\n        {username: {msg: '', state: ''}, password: {msg: '', state: ''}\r\n        })\r\n\r\n    const [msg, setMsg] = useState({\r\n        message: '', color: 'gray'\r\n    })\r\n\r\n    const [msg2, setMsg2] = useState({\r\n        message: '', color: 'gray'\r\n    })\r\n\r\n    const changeHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ' active'}})\r\n    }\r\n\r\n    const focusHandler = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ' active'}})\r\n    }\r\n\r\n    const blurHandler = (event: any) => {\r\n        if (event.target.value === '') {\r\n            setForm({ ...form, [event.target.name]: {msg: event.target.value, state: ''}})\r\n        }\r\n    }\r\n\r\n    const a = axios.create(auth.request_params)\r\n\r\n    const handleResatBalance = () => {\r\n        a.post('/profile/reset_balance', { username: form.username.msg })\r\n            .then((res: any) => {\r\n                updateBalance()\r\n            })\r\n            .catch((err: any) => setMsg(\r\n                {message: err.response.data.message, color: 'red'}\r\n            ))\r\n    }\r\n\r\n    const handleRename = () => {\r\n        a.post('/profile/rename', { username: form.username.msg })\r\n            .then((res: any) => {\r\n                rename(res.data.username)\r\n                setMsg({message: 'Welcome, ' + res.data.username + '!', color: 'green'})\r\n            })\r\n            .catch((err: any) => setMsg(\r\n                {message: err.response.data.message, color: 'red'}\r\n            ))\r\n    }\r\n\r\n    const handlePassword = () => {\r\n        a.post('/profile/chpasswd', { password: form.password.msg })\r\n            .then((res: any) => {\r\n                setMsg2({message: 'Password has changed', color: 'green'})\r\n            })\r\n            .catch((err: any) => setMsg2(\r\n                {message: err.response.data.message, color: 'red'}\r\n            ))\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        setSession({ email: '', name: '', token: '' })\r\n        window.location.replace('login')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <a href=\"\" className=\"breadcrumb\">Home</a>\r\n                        <a href=\"about\" className=\"breadcrumb\">About</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        <div className='row about_container'>\r\n            <div className='row'>\r\n                <div className='collection about_internal_container'>\r\n                    <p className='collection-item black-text'>\r\n                        {'Email:    ' + auth.email}</p>\r\n                    <p className='collection-item black-text'>\r\n                        {'Username: ' + auth.name}</p>\r\n                    <p className='collection-item black-text'>\r\n                        {'Balance:    ' + auth.balance}</p>\r\n                </div>\r\n            </div>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn about_btn green lighten-2 black-text'\r\n                    onClick={handleResatBalance}\r\n                >\r\n                    Reset balance to 100 000 USD\r\n                </button>\r\n            </div>\r\n            <form className='col s12'>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>border_color</i>\r\n                        <input\r\n                            id='username'\r\n                            name='username'\r\n                            type='text'\r\n                            value={form.username.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='username' className={'username' + form.username.state} >New username</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn about_btn green lighten-2 black-text'\r\n                    onClick={handleRename}\r\n                >\r\n                    Change username\r\n                </button>\r\n            </div>\r\n            <div className={'alert ' + msg.color + '-text text-lighten-1'}>\r\n                {msg.message}\r\n            </div>\r\n            <form className='col s12'>\r\n                <div className='row'>\r\n                    <div className='input-field col s6'>\r\n                        <i className='material-icons prefix'>more_horiz</i>\r\n                        <input\r\n                            id='password'\r\n                            name='password'\r\n                            type='password'\r\n                            value={form.password.msg}\r\n                            onChange={changeHandler}\r\n                            onFocus={focusHandler}\r\n                            onBlur={blurHandler}\r\n                        />\r\n                        <label htmlFor='password' className={'password' + form.password.state}>New password</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className='card-action'>\r\n                <button\r\n                    className='btn about_btn green lighten-2 black-text'\r\n                    onClick={handlePassword}\r\n                >\r\n                    Change password\r\n                </button>\r\n            </div>\r\n            <div className={'alert ' + msg2.color + '-text text-lighten-1'}>\r\n                {msg2.message}\r\n            </div>\r\n\r\n            <div className='card-action about_card_btn'>\r\n                <button\r\n                    className='btn about_btn green lighten-2 black-text'\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Weather, WeatherAll} from '../features/weather/weatherSlice'\r\nimport {city_img} from '../components/Images'\r\n\r\ninterface Args {\r\n    weather: WeatherAll\r\n    baseUrl: string\r\n}\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    console.log('NODE_ENV')\r\n    // @ts-ignore\r\n    base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n}\r\n\r\nexport const WeatherP = ({weather, baseUrl}: Args): any => {\r\n    let cities: any =  Object.entries(weather.weather).map((city: [string, Weather], index: number) =>\r\n        <td onClick={() => window.location.replace(base + '/forecast/' + city[0])}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-image\">\r\n                        <img src={city_img[index]} alt={city[0]} className='weather_img'/>\r\n                        <span className=\"card-title\">{city[0]}</span>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <table>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>Temperature</td>\r\n                                <td className='weather_table_right'>\r\n                                    {Math.round((city[1].current_temp + Number.EPSILON) * 100) / 100 + ' °С'}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Wind speed</td>\r\n                                <td className='weather_table_right'>{city[1].current_wind_speed + ' meter/sec'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Cloudiness</td>\r\n                                <td className='weather_table_right'>{city[1].current_clouds + ' %'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Pressure</td>\r\n                                <td className='weather_table_right'>{city[1].current_pressure + ' hPa'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Humidity</td>\r\n                                <td className='weather_table_right'>{city[1].current_humidity + ' %'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Visibility</td>\r\n                                <td className='weather_table_right'>{city[1].current_visibility + ' metres'}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        </td>\r\n    )\r\n    if(cities === []) {\r\n        cities = <div className=\"progress\">\r\n            <div className=\"indeterminate\"/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <a href=\"\" className=\"breadcrumb\">Home</a>\r\n                        <a href=\"weather\" className=\"breadcrumb\">Weather</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <table>\r\n                <tr>\r\n                    {cities}\r\n                </tr>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useParams} from 'react-router-dom'\r\n\r\nlet base = ''\r\nif (process.env.NODE_ENV !== 'development') {\r\n    console.log('NODE_ENV')\r\n    // @ts-ignore\r\n    base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n}\r\n\r\nexport const Forecast = ({weather, baseUrl}: any): any => {\r\n\r\n    const city = useParams<{city: string}>().city\r\n\r\n    let hourly = <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n    </div>\r\n\r\n    if (weather.weather[city] !== undefined) {\r\n        hourly = weather.weather[city].hourly_temp.map((tmp: number, index: number) => {\r\n            return (\r\n                <tr>\r\n                    <td>{index * 3}</td>\r\n                    <td>{weather.weather[city].hourly_temp[index]}</td>\r\n                    <td>{weather.weather[city].hourly_wind_speed[index]}</td>\r\n                    <td>{weather.weather[city].hourly_clouds[index]}</td>\r\n                    <td>{weather.weather[city].hourly_pressure[index]}</td>\r\n                    <td>{weather.weather[city].hourly_humidity[index]}</td>\r\n                    <td>{weather.weather[city].hourly_visibility[index]}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <a href=\"\" className=\"breadcrumb\">Home</a>\r\n                        <a href=\"weather\" className=\"breadcrumb\">Weather</a>\r\n                        <a href={base + \"/weather/\" + city} className=\"breadcrumb\">{'Forecast for ' + city}</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Hours</th>\r\n                    <th>Temperature</th>\r\n                    <th>Wind speed</th>\r\n                    <th>Cloudiness</th>\r\n                    <th>Pressure</th>\r\n                    <th>Humidity</th>\r\n                    <th>Visibility</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {hourly}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n}\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nexport interface Weather {\r\n    current_temp: number\r\n    hourly_temp: number[]\r\n    current_wind_speed: number\r\n    hourly_wind_speed: number[]\r\n    current_clouds: number\r\n    hourly_clouds: number[]\r\n    current_pressure: number\r\n    hourly_pressure: number[]\r\n    current_humidity: number\r\n    hourly_humidity: number[]\r\n    current_visibility: number\r\n    hourly_visibility: number[]\r\n}\r\n\r\nexport interface WeatherMap {\r\n    [index: string]: Weather\r\n}\r\n\r\nexport interface Page {\r\n    temp: {\r\n        temp: string\r\n        image: string\r\n    }\r\n    city: string\r\n    quantity: string\r\n    rate: string\r\n    amount: string\r\n    rich: boolean\r\n    hidden: boolean\r\n}\r\n\r\nexport interface WeatherAll {\r\n    weather: WeatherMap\r\n    page: Page\r\n}\r\n\r\nconst initialState: WeatherAll = {\r\n    weather: {},\r\n    page: {\r\n        temp: {\r\n            temp: '0',\r\n            image: 'wb_sunny'\r\n        },\r\n        quantity: '1',\r\n        rich: true,\r\n        city: 'Moscow',\r\n        rate: '0 %',\r\n        amount: '0 USD',\r\n        hidden: true\r\n    }\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'weather',\r\n    initialState,\r\n    reducers: {\r\n        update_weather(state: WeatherAll, action: PayloadAction<WeatherMap>) {\r\n            state.weather = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { update_weather } = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","import {configureStore, ThunkAction, Action} from '@reduxjs/toolkit'\r\n\r\nimport authReducer from '../features/auth/authSlice'\r\nimport weatherReducer from '../features/weather/weatherSlice'\r\nimport derivativeReducer from '../features/derivative/derivativeSlice'\r\nimport statsReducer from '../features/stats/statsSlice'\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    weather: weatherReducer,\r\n    derivative: derivativeReducer,\r\n    stats: statsReducer\r\n  }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>\r\n","import {updBalance} from './authSlice'\r\n\r\nconst axios = require('axios').default\r\n\r\nconst sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst upd = (dispatch: any, getState: any) => {\r\n    if(getState().auth.name !== '') {\r\n        axios.create(getState().auth.request_params).post('/profile/balance')\r\n            .then((res: any) => {\r\n                dispatch(updBalance(res.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const regularUpdateBalance = () => async (dispatch: any, getState: any) => {\r\n    while(true) {\r\n        await sleep(10000)\r\n        upd(dispatch, getState)\r\n    }\r\n}\r\n\r\nexport const updateBalance = () => async (dispatch: any, getState: any) => {\r\n    upd(dispatch, getState)\r\n    return Promise.resolve()\r\n}\r\n","import React from 'react'\r\n\r\nimport {Weather, WeatherAll} from '../features/weather/weatherSlice'\r\nimport {Derivative} from '../features/derivative/derivativeSlice'\r\nimport {Session} from '../features/auth/authSlice'\r\nimport {city_img} from '../components/Images'\r\nimport {store} from '../app/store'\r\nimport {updateBalance} from '../features/auth/useAuth'\r\n\r\nconst axios = require('axios').default\r\n\r\ninterface Args {\r\n    auth: Session\r\n    weather0: WeatherAll\r\n    derivative0: Derivative\r\n    changeCity: (city: string) => void\r\n    changeTemp: (event: any) => void\r\n    changeRich: () => void\r\n    changeQuantity: (event: any) => void\r\n    changePrivate_derivative: () => void\r\n    baseUrl: string\r\n}\r\n\r\nexport const Futures = ({\r\n                            auth,\r\n                            weather0,\r\n                            derivative0,\r\n                            changeCity,\r\n                            changeTemp,\r\n                            changeRich,\r\n                            changeQuantity,\r\n                            changePrivate_derivative,\r\n                            baseUrl\r\n}: Args): any => {\r\n\r\n    const city = derivative0.page.city\r\n    const temp = derivative0.page.temp\r\n    const rich = derivative0.page.rich\r\n\r\n    const request = axios.create(auth.request_params)\r\n    const derivative = derivative0.daily[city]\r\n\r\n\r\n    const tempRate = derivative0.page.tempRate\r\n\r\n    const private_derivative = derivative0.page.private_derivative\r\n    const quantity = derivative0.page.quantity\r\n\r\n    let cities: any = <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n    </div>\r\n\r\n    if(weather0.weather !== undefined) {\r\n        cities = Object.entries(weather0.weather).map((city: [string, Weather], index: number) => {\r\n            return (\r\n                <td onClick={() => {\r\n                    changeCity(city[0])\r\n                }}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <img className='futures_img'\r\n                                src={city_img[index]} alt={city[0]}/>\r\n                            <span className=\"card-title\">{city[0]}</span>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            )\r\n        })\r\n    }\r\n\r\n    let rates: any = <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n    </div>\r\n\r\n    if (derivative !== undefined) {\r\n        rates = derivative.temp.map((d: number, i: number) =>\r\n            <tr>\r\n                <td>{Math.round((d + Number.EPSILON) * 100) / 100 + ' °C'}</td>\r\n                <td className='text_center'>{Math.round((derivative.rate[i] + Number.EPSILON) * 1000) / 10 + ' %' }</td>\r\n                <td className='text_right'>{Math.round((derivative.rate2[i] + Number.EPSILON) * 1000) / 10 + ' %' }</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const balance = auth.balance\r\n\r\n    const handleBuy = () => {\r\n        request.post('/derivative/buy', {\r\n            city: city,\r\n            duration: 60 * 24,\r\n            temp: Number.parseFloat(temp.temp),\r\n            rich: rich,\r\n            quantity: Number.parseFloat(quantity),\r\n            hidden: private_derivative\r\n        })\r\n            .then(() => {\r\n                store.dispatch(updateBalance())\r\n            })\r\n    }\r\n\r\n    let card: any = <>\r\n        <h4 className=\"grey-text text-darken-3\">\r\n            {city}\r\n        </h4>\r\n        <div className=\"progress\">\r\n            <div className=\"indeterminate\"/>\r\n        </div>\r\n    </>\r\n\r\n    if(city !== '') {\r\n        card = <>\r\n            <h4 className=\"grey-text text-darken-3\">\r\n                {city}\r\n            </h4>\r\n            <div className=\"row\">\r\n                <div className=\"col s3\">\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>Temperature</td>\r\n                            <td className='text_right'>{Math.round((weather0.weather[city].current_temp + Number.EPSILON) * 100) / 100 + ' °C'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Wind speed</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_wind_speed + ' meter/sec'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cloudiness</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_clouds + ' %'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pressure</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_pressure + ' hPa'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Humidity</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_humidity + ' %'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Visibility</td>\r\n                            <td className='text_right'>{weather0.weather[city].current_visibility + ' metres'}</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"col s3\">\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Temperature</th>\r\n                            <th className='text_center'>Reach rate</th>\r\n                            <th className='text_right'>Not reach rate</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rates}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"col s3\">\r\n                    <div className='row'>\r\n                        <div className='input-field col s12'>\r\n                            <i className='material-icons prefix'>{temp.image}</i>\r\n                            <input\r\n                                id='temp'\r\n                                name='temp'\r\n                                type='text'\r\n                                value={temp.temp}\r\n                                onChange={async (event: any) => {\r\n                                    changeTemp(event)\r\n                                }}\r\n                                onFocus={event => event.target.select()}\r\n                            />\r\n                            <label htmlFor='temp' className='active label_temperature grey-text text-darken-3'>\r\n                                Temperature [°C]\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='input-field col s12'>\r\n                            <i className='material-icons prefix'>border_color</i>\r\n                            <input\r\n                                id='quantity'\r\n                                name='quantity'\r\n                                type='text'\r\n                                value={quantity}\r\n                                onChange={(event: any) => {\r\n                                    changeQuantity(event)\r\n                                }}\r\n                                onFocus={event => event.target.select()}\r\n                            />\r\n                            <label htmlFor='quantity' className='active label_quantity grey-text text-darken-3'>\r\n                                Quantity\r\n                            </label>\r\n                            <label className='label_rich'>\r\n                                <input type=\"checkbox\" className=\"filled-in\" checked={rich}\r\n                                    onChange={ () => {\r\n                                        changeRich()\r\n                                    }}/>\r\n                                <span className=\"grey-text text-darken-3\">Pay if temperature rises above</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"collection label_rich\">\r\n                        <p className=\"collection-item grey lighten-3 grey-text text-darken-3\"><span className=\"badge\">\r\n                            {Math.round((balance + Number.EPSILON) * 100) / 100 + ' USD'}\r\n                        </span>Balance</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s3\">\r\n                    <div className=\"collection\">\r\n                        <p className=\"collection-item grey lighten-3 grey-text text-darken-3\"><span className=\"badge\">\r\n                            {tempRate}\r\n                        </span>Rate</p>\r\n                    </div>\r\n                    <div className=\"collection label_rich\">\r\n                        <p className=\"collection-item grey lighten-3 grey-text text-darken-3\"><span className=\"badge\">\r\n                            {Math.round(Number.parseFloat(tempRate) * Number.parseFloat(quantity)) * 60 * 24 / 100 + ' USD'}\r\n                        </span>Amount</p>\r\n                    </div>\r\n                    <div className='cont_private_label'>\r\n                        <label>\r\n                            <input type=\"checkbox\" className=\"filled-in\" checked={private_derivative}\r\n                                   onChange={() => {\r\n                                       changePrivate_derivative()\r\n                                   }}/>\r\n                            <span className=\"grey-text text-darken-3\">Private (only you will see one)</span>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"buy_btn btn\"\r\n                    onClick={handleBuy}>\r\n                        Buy\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    }\r\n\r\n    return <div className=\"grey lighten-3\">\r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n                <div className=\"col s12\">\r\n                    <a href=\"\" className=\"breadcrumb\">Home</a>\r\n                    <a href=\"futures\" className=\"breadcrumb\">Futures</a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <table>\r\n            <tr>\r\n                {cities}\r\n            </tr>\r\n        </table>\r\n        {card}\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\r\nimport {connect, useSelector} from 'react-redux'\r\n\r\nimport {Navbar} from './components/Navbar'\r\n\r\nimport {Session, rename, setSession} from './features/auth/authSlice'\r\nimport {WeatherAll} from './features/weather/weatherSlice'\r\nimport {page_city_change, Stat} from './features/stats/statsSlice'\r\n\r\nimport { Derivative } from './features/derivative/derivativeSlice'\r\n\r\nimport {changeCity, changeTemp, changeRich, changeQuantity,\r\n    changePrivate_derivative} from './features/derivative/useDerivative'\r\n\r\nimport { Login } from './pages/loginPage'\r\nimport { AddUser } from './pages/addUser'\r\nimport { About } from './pages/aboutUser'\r\nimport { WeatherP } from './pages/weather'\r\nimport { Forecast } from './pages/forecast'\r\nimport { Futures } from './pages/futures'\r\nimport {Statistic} from './pages/statistic'\r\nimport {updateBalance} from \"./features/auth/useAuth\";\r\n\r\ninterface State {\r\n    stats: Stat\r\n    auth: Session\r\n    weather: WeatherAll\r\n    derivative: Derivative\r\n}\r\n\r\nconst StatisticPage = connect(() => (state: State) => {\r\n    return {stats: state.stats, baseUrl: state.auth.base}\r\n}, {\r\n    page_city_change: page_city_change\r\n})(Statistic)\r\n\r\nconst NavbarFrame = connect(() => (state: State) => {\r\n    return {auth: state.auth, baseUrl: state.auth.base}\r\n})(Navbar)\r\n\r\nconst AboutPage = connect(() => (state: State) => {\r\n    return {auth: state.auth, baseUrl: state.auth.base}\r\n}, {\r\n    rename: rename, setSession: setSession, updateBalance: updateBalance\r\n})(About)\r\n\r\nconst AddUserPage = connect(() => (state: State) => {\r\n    return {auth: state.auth, baseUrl: state.auth.base}\r\n})(AddUser)\r\n\r\nconst ForecastPage = connect(() => (state: State) => {\r\n    return {weather: state.weather, baseUrl: state.auth.base}\r\n})(Forecast)\r\n\r\nconst WeatherPage = connect(() => (state: State) => {\r\n    return {weather: state.weather, baseUrl: state.auth.base}\r\n})(WeatherP)\r\n\r\nconst LoginPage = connect(() => (state: State) => {\r\n    return {auth: state.auth, baseUrl: state.auth.base}\r\n}, {\r\n    setSession: setSession\r\n})(Login)\r\n\r\nconst FuturesPage = connect(() => (state: State) => {\r\n    return {auth: state.auth, weather0: state.weather, derivative0:\r\n        state.derivative, baseUrl: state.auth.base}\r\n}, {\r\n    changeCity: changeCity,\r\n    changeTemp: changeTemp,\r\n    changeRich: changeRich,\r\n    changeQuantity: changeQuantity,\r\n    changePrivate_derivative: changePrivate_derivative\r\n})(Futures)\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <Router basename={useSelector((state: State) => state.auth.base)}>\r\n        <NavbarFrame />\r\n        <div className='App'>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => (\r\n                        <nav>\r\n                            <div className=\"nav-wrapper\">\r\n                                <div className=\"col s12\">\r\n                                    <p className=\"breadcrumb\">Home</p>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    )}\r\n                />\r\n                <Route exact path='/login' component={ LoginPage } />\r\n                <Route exact path='/register' component={ AddUserPage } />\r\n                <Route exact path='/about' component={ AboutPage } />\r\n                <Route exact path='/weather' component={ WeatherPage } />\r\n                <Route path='/forecast/:city' component={ ForecastPage } />\r\n                <Route exact path='/futures' component={ FuturesPage } />\r\n                <Route exact path='/statistic' component={ StatisticPage }  />\r\n                <Redirect to='/' />\r\n            </Switch>\r\n        </div>\r\n      </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\n\r\nimport {StatDetail} from '../features/stats/statsSlice'\r\nimport {city_img} from '../components/Images'\r\n\r\nexport const Statistic = ({stats, page_city_change, baseUrl}: any): any => {\r\n\r\n    const show = (s: StatDetail, index: number) =>\r\n        <table className={[0].map((condition) => {\r\n            if(index % 2 === 0) {\r\n                return \"striped collection-item yellow lighten-4 grey-text text-darken-3\"\r\n            } else {\r\n                return \"striped collection-item green lighten-4 grey-text text-darken-3\"\r\n            }\r\n        })[0]}>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Paid</td>\r\n                    <td className='statistics_table_right'>{s.paid + ' USD'}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Temperature</td>\r\n                    <td className='statistics_table_right'>{s.temp}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Quantity</td>\r\n                    <td className='statistics_table_right'>{s.quantity}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Rises above</td>\r\n                    <td className='statistics_table_right'>{s.temp_reach.toString()}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Privacy</td>\r\n                    <td className='statistics_table_right'>{s.hidden.toString()}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Duration</td>\r\n                    <td className='statistics_table_right'>{s.duration}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Duration left</td>\r\n                    <td className='statistics_table_right'>{s.duration_left}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Buyer's email</td>\r\n                    <td className='statistics_table_right'>{s.email}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    const cities: any = Object.entries(stats.city).map((city: any, index: number) => {\r\n            const tab_content: any = [\r\n                'No futures',\r\n                'Quantity of futures: ' + city[1].length,\r\n                '',\r\n            ]\r\n            if (city[1].length !== 0) {\r\n                tab_content[0] = city[1].map((detail: any, index2: number) => show(detail, index2))\r\n            }\r\n            if (stats.page[index] === undefined) {\r\n                window.location.replace('about')\r\n            }\r\n            const re: any = []\r\n            re.push(\r\n                    <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <img className='statistics_img' src={city_img[index]} alt={city[0]}/>\r\n                            <span className=\"card-title\">{city[0]}</span>\r\n                        </div>\r\n                        <div className=\"card-tabs\">\r\n                            <ul className=\"tabs tabs-fixed-width\">\r\n                                <li className=\"tab statistics_pointer\" onClick={() => {\r\n                                    page_city_change({index: index, payload:\r\n                                            {index: 0, active: ['green lighten-4', '', '']}})\r\n                                }}>\r\n                                    <p className={stats.page[index].active[0]}>Futures</p>\r\n                                </li>\r\n                                <li className=\"tab statistics_pointer\" onClick={() => {\r\n                                    page_city_change({index: index, payload:\r\n                                            {index: 1, active: ['', 'green lighten-4', '']}})\r\n                                }}>\r\n                                    <p className={stats.page[index].active[1]}>Statistic</p>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            )\r\n            return re.concat(tab_content[stats.page[index].index])\r\n    })\r\n\r\n    let view: any = []\r\n\r\n    let i = 0\r\n    do {\r\n        view.push(\r\n            <tr>\r\n                {cities.map((city: any) => {\r\n                    if (city.length > i) {\r\n                        return <td className=\"\">{city[i]}</td>\r\n                    } else {\r\n                        return <td/>\r\n                    }\r\n                })}\r\n            </tr>\r\n        )\r\n        i++\r\n    } while (Math.max(...cities.map((city: any) => city.length)) > i)\r\n\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"col s12\">\r\n                        <a href=\"\" className=\"breadcrumb\">Home</a>\r\n                        <a href=\"statistic\" className=\"breadcrumb\">Statistic</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <table>\r\n                <tbody>\r\n                    {view}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {update_stat} from './statsSlice'\r\n\r\nconst axios = require('axios').default\r\n\r\nconst sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst upd = (dispatch: any, getState: any) => {\r\n    if (getState().auth.name !== '') {\r\n    axios.create(getState().auth.request_params).post('/derivative/stats')\r\n        .then((res: any) => {\r\n            dispatch(update_stat(res.data.stats))\r\n        })\r\n        .catch((err: any) => console.log(err))\r\n}\r\n}\r\n\r\nexport const regularUpdateStats = () => async (dispatch: any, getState: any) => {\r\n    while (true) {\r\n        await sleep(10000)\r\n        upd(dispatch, getState)\r\n    }\r\n}\r\n\r\nexport const updateStats = () => async (dispatch: any, getState: any) => {\r\n    upd(dispatch, getState)\r\n    return Promise.resolve()\r\n}\r\n","import {update_weather} from './weatherSlice'\r\nimport {updateRate} from '../derivative/useDerivative'\r\n\r\nconst axios = require('axios').default\r\n\r\nconst sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst upd = (dispatch: any, getState: any) => {\r\n    if (getState().auth.name !== '') {\r\n        axios.create(getState().auth.request_params).post('/weather/update')\r\n            .then((res: any) => {\r\n                dispatch(update_weather(res.data))\r\n                if (getState().derivative.page.city === '') {\r\n                    updateRate(dispatch, getState)\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const regularUpdateWeather = () => async (dispatch: any, getState: any) => {\r\n    while(true) {\r\n        await sleep(10000)\r\n        upd(dispatch, getState)\r\n    }\r\n}\r\n\r\nexport const updateWeather = () => async (dispatch: any, getState: any) => {\r\n    console.log('updateWeather 0')\r\n    upd(dispatch, getState)\r\n    console.log('updateWeather 1')\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\nimport {store} from './app/store'\r\nimport {Provider} from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport {updateBalance, regularUpdateBalance} from './features/auth/useAuth'\r\nimport {regularUpdateRate} from './features/derivative/useDerivative'\r\nimport {updateStats, regularUpdateStats} from './features/stats/useStats'\r\nimport {updateWeather, regularUpdateWeather} from './features/weather/useWeather'\r\n\r\nconst headRoot = document.head\r\nclass Head extends React.Component {\r\n    public render() {\r\n        return ReactDOM.createPortal(this.props.children, headRoot)\r\n    }\r\n}\r\n\r\nexport const history = createBrowserHistory({\r\n    basename: process.env.PUBLIC_URL\r\n})\r\n\r\nstore.dispatch(updateWeather())\r\n    .then(() => {\r\n        return store.dispatch(updateStats())\r\n    })\r\n    .then(() => {\r\n        return store.dispatch(updateBalance())\r\n    })\r\n    .then(() => {\r\n        store.dispatch(regularUpdateWeather())\r\n        store.dispatch(regularUpdateRate())\r\n        store.dispatch(regularUpdateBalance())\r\n        store.dispatch(regularUpdateStats())\r\n\r\n        let base = ''\r\n        if (process.env.NODE_ENV !== 'development') {\r\n            console.log('NODE_ENV')\r\n            // @ts-ignore\r\n            base = /\\/[a-zA-Z0-9_]*/.exec(window.location.pathname)[0]\r\n        }\r\n\r\n        ReactDOM.render(\r\n            <React.StrictMode>\r\n                <Head>\r\n                    <link href='https://fonts.googleapis.com/icon?family=Material+Icons' rel='stylesheet' />\r\n                    <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\r\n                    <title>My Page</title>\r\n                    <base href={base + '/'} />\r\n                </Head>\r\n                <Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n            </React.StrictMode>,\r\n            document.getElementById('root')\r\n        )\r\n        serviceWorker.unregister()\r\n    })\r\n    .catch((err: any) => {\r\n        console.log(err)\r\n    })\r\n"],"sourceRoot":""}